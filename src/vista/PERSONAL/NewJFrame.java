/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.PERSONAL;

<<<<<<< HEAD
import java.awt.KeyEventPostProcessor;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
=======
import java.awt.Color;
import java.awt.KeyEventPostProcessor;
import java.awt.KeyboardFocusManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
>>>>>>> dab3153176f58953379587b83aa858d5aee7b22b
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/**
 *
 * @author PC02
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() throws ParseException {
        initComponents();
        this.setLocationRelativeTo(null);
<<<<<<< HEAD
        jDialog1.setLocationRelativeTo(null);
//        
        
//        obtenerDiaSemana();
        
        
//        DateFormat hora1 = new SimpleDateFormat("HH:mm:ss"); 
//        DateFormat hora2 = new SimpleDateFormat("HH:mm:ss"); 
//        
//        String s = "08:00:00";
//        String s1 = "12:30:00";
//        
//        String [] ss = s.split(":");
//        String [] sss = s1.split(":");
//        
//        String part1 = ss[0];
//        String part2 = sss[0];
////        
////        long lantes = Long.parseLong(part1);
////        long lahora = Long.parseLong(part2);
//        long diferencia = (Long.parseLong(part2) - Long.parseLong(part1)); 
//        System.out.println(new java.text.SimpleDateFormat( "HH:mm:ss" ).format( new Date(diferencia) ));
        
        
        ///////////////////////////////////////
        
        
//        long tiempoInicial=100000;
//        long tiempoFinal=123000; 
//        long resta=tiempoFinal - tiempoInicial;
//        //el metodo getTime te devuelve en mili segundos para saberlo en mins debes hacer
//        resta=resta /(1000*60);
//        System.out.println("diferencia" + resta);
        
        ////////////////////////////////
=======
        DIALOGO.setLocationRelativeTo(null);
        DIALOGO.getContentPane().setBackground(Color.white);
       //salir presionando escape
        getRootPane().getInputMap(javax.swing.JComponent.WHEN_IN_FOCUSED_WINDOW).put(
        javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0), "Cancel");
        
        getRootPane().getActionMap().put("Cancel", new javax.swing.AbstractAction(){
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                dispose();
                
            }
        });
>>>>>>> dab3153176f58953379587b83aa858d5aee7b22b
        
        
        
        
//        //salir presionando escape
//        getRootPane().getInputMap(javax.swing.JComponent.WHEN_IN_FOCUSED_WINDOW).put(
//        javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0), "Cancel");
//        
<<<<<<< HEAD
//        
        
      getRootPane().getInputMap(javax.swing.JComponent.WHEN_FOCUSED).put(
        javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0), "Cancel");
        // BOTON ESCAPE (ESC)
        getRootPane().getActionMap().put("Cancel", new javax.swing.AbstractAction(){
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
              if(lblDiag.getText().equals("A")){
               
                   System.out.println("vamo saliendo");
                    jDialog1.dispose();   
              }
//                        
                   
           
            }
        });  
       
       
=======
//        getRootPane().getActionMap().put("Cancel", new javax.swing.AbstractAction(){
//            @Override
//            public void actionPerformed(java.awt.event.ActionEvent e)
//            {
//                DIALOGO.dispose();
//                
//            }
//        });
        
>>>>>>> dab3153176f58953379587b83aa858d5aee7b22b
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

<<<<<<< HEAD
        jDialog1 = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        lblDiag = new javax.swing.JLabel();
=======
        DIALOGO = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
>>>>>>> dab3153176f58953379587b83aa858d5aee7b22b
        fecha1 = new javax.swing.JComboBox();
        fecha2 = new javax.swing.JComboBox();
        fecha3 = new javax.swing.JComboBox();
        fecha4 = new javax.swing.JComboBox();
        D_FECHA = new com.toedter.calendar.JDateChooser();
        TXT_FECHA = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        TXT_FECHAAAAAA = new javax.swing.JTextField();
        fecha5 = new javax.swing.JComboBox();
        fecha6 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

<<<<<<< HEAD
        jDialog1.setMinimumSize(new java.awt.Dimension(400, 300));
        jDialog1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jDialog1KeyPressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextField1.setText("jTextField1");

        lblDiag.setText("jLabel1");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDiag)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(lblDiag)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
=======
        DIALOGO.setMinimumSize(new java.awt.Dimension(400, 300));
        DIALOGO.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DIALOGOFocusLost(evt);
            }
        });
        DIALOGO.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DIALOGOKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DIALOGOKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DIALOGOKeyTyped(evt);
            }
        });

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout DIALOGOLayout = new javax.swing.GroupLayout(DIALOGO.getContentPane());
        DIALOGO.getContentPane().setLayout(DIALOGOLayout);
        DIALOGOLayout.setHorizontalGroup(
            DIALOGOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DIALOGOLayout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(jLabel1)
                .addContainerGap(144, Short.MAX_VALUE))
        );
        DIALOGOLayout.setVerticalGroup(
            DIALOGOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DIALOGOLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(360, Short.MAX_VALUE))
>>>>>>> dab3153176f58953379587b83aa858d5aee7b22b
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fecha1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar...", "00:00:00", "00:01:00", "00:30:00", "01:00:00", "01:01:00", "01:30:00", "02:00:00", "02:01:00", "02:30:00", "03:00:00", "03:01:00", "03:30:00", "04:00:00", "04:01:00", "04:30:00", "05:00:00", "05:01:00", "05:30:00", "06:00:00", "06:01:00", "06:30:00", "07:00:00", "07:01:00", "07:30:00", "08:00:00", "08:01:00", "08:30:00", "09:00:00", "09:01:00", "09:30:00", "10:00:00", "10:01:00", "10:30:00", "11:00:00", "11:01:00", "11:30:00", "12:00:00", "12:01:00", "12:30:00", "13:00:00", "13:01:30", "13:30:00", "14:00:00", "14:01:00", "14:30:00", "15:00:00", "15:01:00", "15:30:00", "16:00:00", "16:01:00", "16:30:00", "17:00:00", "17:01:00", "17:30:00", "18:00:00", "18:01:00", "18:30:00", "19:00:00", "19:01:00", "19:30:00", "20:00:00", "20:01:00", "20:30:00", "21:00:00", "21:01:00", "21:30:00", "22:00:00", "22:01:00", "22:30:00", "23:00:00", "23:01:00", "23:30:00", "15:40:00" }));
        fecha1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fecha1ItemStateChanged(evt);
            }
        });
        fecha1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fecha1PropertyChange(evt);
            }
        });

        fecha2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar...", "00:00:00", "00:01:00", "00:30:00", "01:00:00", "01:01:00", "01:30:00", "02:00:00", "02:01:00", "02:30:00", "03:00:00", "03:01:00", "03:30:00", "04:00:00", "04:01:00", "04:30:00", "05:00:00", "05:01:00", "05:30:00", "06:00:00", "06:01:00", "06:30:00", "07:00:00", "07:01:00", "07:30:00", "08:00:00", "08:01:00", "08:30:00", "09:00:00", "09:01:00", "09:30:00", "10:00:00", "10:01:00", "10:30:00", "11:00:00", "11:01:00", "11:30:00", "12:00:00", "12:01:00", "12:30:00", "13:00:00", "13:01:30", "13:30:00", "14:00:00", "14:01:00", "14:30:00", "15:00:00", "15:01:00", "15:30:00", "16:00:00", "16:01:00", "16:30:00", "17:00:00", "17:01:00", "17:30:00", "18:00:00", "18:01:00", "18:30:00", "19:00:00", "19:01:00", "19:30:00", "20:00:00", "20:01:00", "20:30:00", "21:00:00", "21:01:00", "21:30:00", "22:00:00", "22:01:00", "22:30:00", "23:00:00", "23:01:00", "23:30:00", "22:50:00" }));
        fecha2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fecha2ItemStateChanged(evt);
            }
        });
        fecha2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fecha2PropertyChange(evt);
            }
        });

        fecha3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar...", "00:00:00", "00:01:00", "00:30:00", "01:00:00", "01:01:00", "01:30:00", "02:00:00", "02:01:00", "02:30:00", "03:00:00", "03:01:00", "03:30:00", "04:00:00", "04:01:00", "04:30:00", "05:00:00", "05:01:00", "05:30:00", "06:00:00", "06:01:00", "06:30:00", "07:00:00", "07:01:00", "07:30:00", "08:00:00", "08:01:00", "08:30:00", "09:00:00", "09:01:00", "09:30:00", "10:00:00", "10:01:00", "10:30:00", "11:00:00", "11:01:00", "11:30:00", "12:00:00", "12:01:00", "12:30:00", "13:00:00", "13:01:30", "13:30:00", "14:00:00", "14:01:00", "14:30:00", "15:00:00", "15:01:00", "15:30:00", "16:00:00", "16:01:00", "16:30:00", "17:00:00", "17:01:00", "17:30:00", "18:00:00", "18:01:00", "18:30:00", "19:00:00", "19:01:00", "19:30:00", "20:00:00", "20:01:00", "20:30:00", "21:00:00", "21:01:00", "21:30:00", "22:00:00", "22:01:00", "22:30:00", "23:00:00", "23:01:00", "23:30:00", "15:40:00" }));
        fecha3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fecha3ItemStateChanged(evt);
            }
        });
        fecha3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fecha3PropertyChange(evt);
            }
        });

        fecha4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar...", "00:00:00", "00:01:00", "00:30:00", "01:00:00", "01:01:00", "01:30:00", "02:00:00", "02:01:00", "02:30:00", "03:00:00", "03:01:00", "03:30:00", "04:00:00", "04:01:00", "04:30:00", "05:00:00", "05:01:00", "05:30:00", "06:00:00", "06:01:00", "06:30:00", "07:00:00", "07:01:00", "07:30:00", "08:00:00", "08:01:00", "08:30:00", "09:00:00", "09:01:00", "09:30:00", "10:00:00", "10:01:00", "10:30:00", "11:00:00", "11:01:00", "11:30:00", "12:00:00", "12:01:00", "12:30:00", "13:00:00", "13:01:30", "13:30:00", "14:00:00", "14:01:00", "14:30:00", "15:00:00", "15:01:00", "15:30:00", "16:00:00", "16:01:00", "16:30:00", "17:00:00", "17:01:00", "17:30:00", "18:00:00", "18:01:00", "18:30:00", "19:00:00", "19:01:00", "19:30:00", "20:00:00", "20:01:00", "20:30:00", "21:00:00", "21:01:00", "21:30:00", "22:00:00", "22:01:00", "22:30:00", "23:00:00", "23:01:00", "23:30:00", "22:50:00" }));
        fecha4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fecha4ItemStateChanged(evt);
            }
        });
        fecha4.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fecha4PropertyChange(evt);
            }
        });

        D_FECHA.setDateFormatString("dd-MM-yyyy");
        D_FECHA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                D_FECHAMouseClicked(evt);
            }
        });
        D_FECHA.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                D_FECHAPropertyChange(evt);
            }
        });

        TXT_FECHA.setText("FECHA");
        TXT_FECHA.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                TXT_FECHACaretUpdate(evt);
            }
        });
        TXT_FECHA.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                TXT_FECHAAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jDateChooser1.setDateFormatString("dd-MM-yyyy");
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });

        TXT_FECHAAAAAA.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                TXT_FECHAAAAAACaretUpdate(evt);
            }
        });

        fecha5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar...", "00:00:00", "00:01:00", "00:30:00", "01:00:00", "01:01:00", "01:30:00", "02:00:00", "02:01:00", "02:30:00", "03:00:00", "03:01:00", "03:30:00", "04:00:00", "04:01:00", "04:30:00", "05:00:00", "05:01:00", "05:30:00", "06:00:00", "06:01:00", "06:30:00", "07:00:00", "07:01:00", "07:30:00", "08:00:00", "08:01:00", "08:30:00", "09:00:00", "09:01:00", "09:30:00", "10:00:00", "10:01:00", "10:30:00", "11:00:00", "11:01:00", "11:30:00", "12:00:00", "12:01:00", "12:30:00", "13:00:00", "13:01:30", "13:30:00", "14:00:00", "14:01:00", "14:30:00", "15:00:00", "15:01:00", "15:30:00", "16:00:00", "16:01:00", "16:30:00", "17:00:00", "17:01:00", "17:30:00", "18:00:00", "18:01:00", "18:30:00", "19:00:00", "19:01:00", "19:30:00", "20:00:00", "20:01:00", "20:30:00", "21:00:00", "21:01:00", "21:30:00", "22:00:00", "22:01:00", "22:30:00", "23:00:00", "23:01:00", "23:30:00", "22:50:00" }));

        fecha6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar...", "00:00:00", "00:01:00", "00:30:00", "01:00:00", "01:01:00", "01:30:00", "02:00:00", "02:01:00", "02:30:00", "03:00:00", "03:01:00", "03:30:00", "04:00:00", "04:01:00", "04:30:00", "05:00:00", "05:01:00", "05:30:00", "06:00:00", "06:01:00", "06:30:00", "07:00:00", "07:01:00", "07:30:00", "08:00:00", "08:01:00", "08:30:00", "09:00:00", "09:01:00", "09:30:00", "10:00:00", "10:01:00", "10:30:00", "11:00:00", "11:01:00", "11:30:00", "12:00:00", "12:01:00", "12:30:00", "13:00:00", "13:01:30", "13:30:00", "14:00:00", "14:01:00", "14:30:00", "15:00:00", "15:01:00", "15:30:00", "16:00:00", "16:01:00", "16:30:00", "17:00:00", "17:01:00", "17:30:00", "18:00:00", "18:01:00", "18:30:00", "19:00:00", "19:01:00", "19:30:00", "20:00:00", "20:01:00", "20:30:00", "21:00:00", "21:01:00", "21:30:00", "22:00:00", "22:01:00", "22:30:00", "23:00:00", "23:01:00", "23:30:00", "22:50:00" }));
        fecha6.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fecha6ItemStateChanged(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fecha2, 0, 112, Short.MAX_VALUE)
                    .addComponent(fecha1, 0, 112, Short.MAX_VALUE)
                    .addComponent(fecha5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fecha6, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(D_FECHA, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(TXT_FECHAAAAAA, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                        .addComponent(fecha4, 0, 112, Short.MAX_VALUE)
                        .addComponent(fecha3, 0, 112, Short.MAX_VALUE)
                        .addComponent(TXT_FECHA)))
                .addGap(14, 14, 14))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(141, 141, 141))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
<<<<<<< HEAD
                .addGap(19, 19, 19)
                .addComponent(jButton1)
                .addGap(29, 29, 29)
=======
>>>>>>> dab3153176f58953379587b83aa858d5aee7b22b
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fecha3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(fecha4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(fecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(D_FECHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fecha5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fecha6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(73, 73, 73)))
                .addComponent(TXT_FECHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TXT_FECHAAAAAA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void cerrar (){
        try {
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {
                public void windowClosing(WindowEvent e){
                    dispose();
                }
        });
            this.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
//     public static void addEscapeListenerWindowDialog( final JDialog windowDialog) {
//         ActionListener escAction = new ActionListener() {
//        @Override
//        public void actionPerformed(ActionEvent e) {
//        windowDialog.dispose();
//        }
////
////             @Override
////             public void actionPerformed(ActionEvent e) {
////                 throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
////             }
//        };
//        windowDialog.getRootPane().registerKeyboardAction(escAction,
//        KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
//        JComponent.WHEN_IN_FOCUSED_WINDOW);
//     }
    
    private void fecha1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fecha1PropertyChange
        
    }//GEN-LAST:event_fecha1PropertyChange

    private void fecha1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fecha1ItemStateChanged

    }//GEN-LAST:event_fecha1ItemStateChanged

    private void fecha2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fecha2ItemStateChanged
        String h = fecha1.getSelectedItem().toString();
        String h2 = fecha2.getSelectedItem().toString();
        
        int a = Integer.parseInt(h.substring(0, 2));
        int b = Integer.parseInt(h.substring(3, 5));
        int c = Integer.parseInt(h.substring(6, 8));
        
        int a1 = Integer.parseInt(h2.substring(0, 2));
        int b1 = Integer.parseInt(h2.substring(3, 5));
        int c1 = Integer.parseInt(h2.substring(6, 8));
        
        int hora =0, minuto=0, segundo =0;
        
        ///////////////SUMAR HORA/////////////
//        hora= a + a1;
//        minuto = b + b1;
//        
//        if(minuto > 60){
//            hora = hora + 1;
//            minuto = minuto - 60;
//        }
//        
//        if(minuto == 60){
//            hora = hora + 1;
//            minuto = 00;
//        }
        //////////////////////////////////////
//        
//        
//        if(a < a1 && b < b1){
//            hora = a1 + a;
//            minuto = b1 + b;
//        }
//        if(a == a1 && b < b1){
//            hora = 00;
//            minuto = b1 + b;
//        }
//        if(a < a1 && b == b1){
//            hora = a1 + a;
//            minuto = 00;
//        }
//        if(a < a1 && b > b1){
//            hora = (a1 + a) + 1;
//            int m=0;
//            m = 60 + b;
//            minuto = m - b1;
//        }
//        
        
//        //// PASAR DIA
        
        if(a < a1 && b < b1){
            hora = a1 - a;
            minuto = b1 - b;
        }
        
        if(a == a1 && b < b1){
            hora = 00;
            minuto = b1 - b;
        }
        
        if(a < a1 && b == b1){
            hora = a1 - a;
            minuto = 00;
        }
        
        if(a < a1 && b > b1){
            hora = (a1 - a) - 1;
            int m=0;
            m = 60 - b;
            minuto = m + b1;
        }
        
        
        if(a==00 && b==00 && c==00){
            hora=a1;
            minuto=b1;
        }
        
        if(a1==00 && b1==00 && b!=00){
            hora = (24 - a) - 1;
            minuto = 60 - b;
        }else{
            if(a1==00 && b1==00 && b==00){
                hora = (24 - a);
                minuto = 00;
            }
        }
        
        if(a1==00 && b1 > 0 && a !=00 && b != 00){
            int q=0, w=0, q1=0,w1=0;
            q = (24 - a) -1;
            w = 60 - b;
            q1 = 00;
            w1 = b1;
            hora = q + q1 ;
            minuto = w + w1;
            
            if(minuto >= 60){
                hora = hora + 1;
                minuto = minuto - 60;
            }
        }
        
        
        if(a!=00 && b!=00 && a1!=00 & b1!=00){
            int z=0,x=0,z1=0,x1=0;
            z = (24 - a) - 1;
            x = 60 - b;
            
            z1= a1;
            x1= b1;
                        
            hora = z+z1;
            minuto = x+x1;
            
            if(minuto >=60){
                hora = hora + 1;
                minuto = minuto - 60;
            }       
        }
//        else{
//            if(a!=00 && b==00 && a1!=00 & b1==00){
//                
//            }
//        }
//        else{
//            if(a1!=00 && b1 > 0 && a==00 && b==00){
//                //////////
//                int q=0, w=0, q1=0,w1=0;
//                q = (24 - a) -1;
//                w = 60 - b;
//                q1 = 00;
//                w1 = b1;
//                hora = q + q1 ;
//                minuto = w + w1;
//            
//                if(minuto >= 60){
//                    hora = hora + 1;
//                    minuto = minuto - 60;
//                }
//                ///////////
//            }
//        }
        
//            else{
//            if(a1==00 && b1 > 0 && a !=00 && b != 00){
//                
//            }
//        }
        
        String horaf = "", minutof ="";
        if(hora < 10){
            horaf = ("0" + hora);
        }else{
            horaf = String.valueOf(hora);
        }
        if(minuto < 10){
            minutof = ("0" + minuto);
        }else{
            minutof = String.valueOf(minuto);
        }

        System.out.println("hora: " + horaf + " " + minutof + " " + segundo+"0");
    }//GEN-LAST:event_fecha2ItemStateChanged

    private void fecha2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fecha2PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_fecha2PropertyChange

    private void fecha3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fecha3ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_fecha3ItemStateChanged

    private void fecha3PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fecha3PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_fecha3PropertyChange

    private void fecha4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fecha4ItemStateChanged
        /////PASAR DIA
        
        String k = fecha3.getSelectedItem().toString();
        String k2 = fecha4.getSelectedItem().toString();
        
        int p = Integer.parseInt(k.substring(0, 2));
        int q = Integer.parseInt(k.substring(3, 5));
        int r = Integer.parseInt(k.substring(6, 8));
        
        int p1 = Integer.parseInt(k2.substring(0, 2));
        int q1 = Integer.parseInt(k2.substring(3, 5));
        int r1 = Integer.parseInt(k2.substring(6, 8));
        
        int hora =0, minuto=0, segundo =0;
        
        ////TODO SEA IGUAL A 0
        if(p==00 && q==00 && p1==00 & q1==00){
        
            hora = 24;
            minuto = 00;
              
        }
        
        //////todo sea diferente a 0
        if(p!=00 && q!=00 && p1!=00 & q1!=00){
            int z=0,x=0,z1=0,x1=0;
            z = (24 - p) - 1;
            x = 60 - q;
            
            z1= p1;
            x1= q1;
                        
            hora = z+z1;
            minuto = x+x1;
            
            if(minuto >=60){
                hora = hora + 1;
                minuto = minuto - 60;
            }       
        }
        
        
        
        //////minutos igual a 0
        if(p!=00 && q==00 && p1!=00 & q1==00){
            int z=0,x=0,z1=0,x1=0;
            z = (24 - p) - 1;
            x = 60 - q;
            
            z1= p1;
            x1= q1;
                        
            hora = z+z1;
            minuto = x+x1;
            
            if(minuto >=60){
                hora = hora + 1;
                minuto = minuto - 60;
            }       
        }
        
        
        if(p!=00 && q==00 && p1!=00 & q1!=00){
            int z=0,x=0,z1=0,x1=0;
            z = (24 - p) - 1;
            x = 60 - q;
            
            z1= p1;
            x1= q1;
                        
            hora = z+z1;
            minuto = x+x1;
            
            if(minuto >=60){
                hora = hora + 1;
                minuto = minuto - 60;
            }       
        }
////        
        
        if(p!=00 && q!=00 && p1!=00 & q1==00){
            int z=0,x=0,z1=0,x1=0;
            z = (24 - p) - 1;
            x = 60 - q;
            
            z1= p1;
            x1= q1;
                        
            hora = z+z1;
            minuto = x+x1;
            
            if(minuto >=60){
                hora = hora + 1;
                minuto = minuto - 60;
            }       
        }
        
        
        
        if(p!=00 && q!=00 && p1==00 & q1!=00){
            int z=0,x=0,z1=0,x1=0;
            z = (24 - p) - 1;
            x = 60 - q;
            
            z1= p1;
            x1= q1;
                        
            hora = z+z1;
            minuto = x+x1;
            
            if(minuto >=60){
                hora = hora + 1;
                minuto = minuto - 60;
            }       
        }
        
        if(p==00 && q!=00 && p1!=00 & q1!=00){
            int z=0,x=0,z1=0,x1=0;
            z = p;
            x = q;
            
            z1= p1;
            x1= q1;
                        
            hora = z+z1;
            minuto = x+x1;
            
            if(minuto >=60){
                hora = hora + 1;
                minuto = minuto - 60;
            }       
        }
        
        if(p==00 && q==00 && p1!=00 & q1!=00){
                                  
            hora = 24 + p1;
            minuto = q1;  
       
        }
        
        if(p==00 && q==00 && p1!=00 & q1==00){
                                  
            hora = 24 + p1;
            minuto = q1;  
       
        }
        
        if(p==00 && q==00 && p1==00 & q1!=00){
                                  
            hora = 24 + p1;
            minuto = q1;  
       
        }
        
        String horaf = "", minutof ="";
        if(hora < 10){
            horaf = ("0" + hora);
        }else{
            horaf = String.valueOf(hora);
        }
        if(minuto < 10){
            minutof = ("0" + minuto);
        }else{
            minutof = String.valueOf(minuto);
        }

        System.out.println("hora pasar dia: " + horaf + " " + minutof + " " + segundo+"0");

    }//GEN-LAST:event_fecha4ItemStateChanged

    private void fecha4PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fecha4PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_fecha4PropertyChange

    private void D_FECHAPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_D_FECHAPropertyChange

        TXT_FECHAAAAAA.setText(TXT_FECHA.getText());
//        String FECHA2= new SimpleDateFormat("dd/MM/yyy").format(D_FECHA.getDate());
//        TXT_FECHA.setText("FECHA");
    }//GEN-LAST:event_D_FECHAPropertyChange

    private void TXT_FECHACaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_TXT_FECHACaretUpdate
       String FECHA2= new SimpleDateFormat("dd/MM/yyy").format(D_FECHA.getDate());
       TXT_FECHAAAAAA.setText(FECHA2);
    }//GEN-LAST:event_TXT_FECHACaretUpdate

    private void TXT_FECHAAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TXT_FECHAAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_TXT_FECHAAncestorMoved

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
//        System.out.println("fecha " + jDateChooser1.getDate());
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void D_FECHAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_D_FECHAMouseClicked
     
    }//GEN-LAST:event_D_FECHAMouseClicked

    private void TXT_FECHAAAAAACaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_TXT_FECHAAAAAACaretUpdate
        fechaaaaaa();
    }//GEN-LAST:event_TXT_FECHAAAAAACaretUpdate

    private void fecha6ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fecha6ItemStateChanged
        String h = fecha5.getSelectedItem().toString();
        String h2 = fecha6.getSelectedItem().toString();
        
        int a = Integer.parseInt(h.substring(0, 2));
        int b = Integer.parseInt(h.substring(3, 5));
        int c = Integer.parseInt(h.substring(6, 8));
        
        int a1 = Integer.parseInt(h2.substring(0, 2));
        int b1 = Integer.parseInt(h2.substring(3, 5));
        int c1 = Integer.parseInt(h2.substring(6, 8));
        
        int hora =0, minuto=0, segundo =0;
        
        if(a < a1 && b < b1){
            hora = a1 - a;
            minuto = b1 - b;
        }
        
        if(a == a1 && b < b1){
            hora = 00;
            minuto = b1 - b;
        }
        
        if(a < a1 && b == b1){
            hora = a1 - a;
            minuto = 00;
        }
        
        if(a < a1 && b > b1){
            hora = (a1 - a) - 1;
            int m=0;
            m = 60 - b;
            minuto = m + b1;
        }
        
        
        
        if(a1==00 && b1==00 && a!=00 && b!=00){
            hora = (24 - a) - 1;
            minuto = 60 - b;
        }
        
        if(a1==00 && b1==00 && a!=00 && b==00){
            hora = (24 - a);
            minuto = 00;
        }
        
        if(a > a1 && b!=00){
            int q=0,w=0,e=0,r=0;
            q = (24 - a) - 1;
            w =  60 - b;
            
            e = a1;
            r = b1;
            
            hora = q + e;
            minuto = w + r;
            
            if(minuto >= 60){
                hora = hora + 1;
                minuto = minuto - 60;
            }            
        }
        
        if(a > a1 && b==00 ){
            int d=0, f=0, g=0, j=0;
            d = (24 - a);
            f = 00;
            
            g = a1;
            j = b1;
            
            hora = d + g;
            minuto = f + j;
            
            if(minuto >= 60){
                hora = hora + 1;
                minuto = minuto - 60;
            }  
        }
        
        String horaf = "", minutof ="";
        
        if(hora < 10){
            horaf = ("0" + hora);
        }else{
            horaf = String.valueOf(hora);
        }
        
        if(minuto < 10){
            minutof = ("0" + minuto);
        }else{
            minutof = String.valueOf(minuto);
        }
        
//        LBL_TOTAL_HORA.setText(horaf + ":" + minutof + ":" + segundo + "0");
        System.out.println("hora: " + horaf + " " + minutof + " " + segundo + "0");








//        String L = fecha5.getSelectedItem().toString();
//        String L2 = fecha6.getSelectedItem().toString();
//        
//        int f = Integer.parseInt(L.substring(0, 2));
//        int g = Integer.parseInt(L.substring(3, 5));
//        int h = Integer.parseInt(L.substring(6, 8));
//        
//        int f1 = Integer.parseInt(L2.substring(0, 2));
//        int g1 = Integer.parseInt(L2.substring(3, 5));
//        int h1 = Integer.parseInt(L2.substring(6, 8));
//        
//        int hora =0, minuto=0, segundo =0;
//        
//        if(f < f1 && g < g1){
//            hora = f1 - f;
//            minuto = g1 - g;
//        }
//        
//        if(f == f1 && g < g1){
//            hora = 00;
//            minuto = g1 - g;
//        }
//        
//        if(f < f1 && g == g1){
//            hora = f1 - f;
//            minuto = 00;
//        }
//        
//        if(f < f1 && g > g1){
//            hora = (f1 - f) - 1;
//            int m=0;
//            m = 60 - g;
//            minuto = m + g1;
//        }
//        
//        if(f != 00 && g != 00 && f1 == 00 && g1 == 00){
//            hora = (24 - f) - 1;
//            minuto = 60 - g;
//        }
//        
//        if(f != 00 && g == 00 && f1 == 00 && g1 == 00){
//            hora = (24 - f);
//            minuto = 00;
//        }
//        
//        if(f == 00 && g == 00 && (f1 != 00 || f1 == 00) && g1 != 00){
//            hora = f1;
//            minuto = g1;
//        }
//        
////        if(f == 00 && g == 00 && f1 == 00 && g1 != 00){
////            hora = f1;
////            minuto = g1;
////        }
//        
//        
//        if(f > f1 && g ==00 && g1 ==00 || g1 !=00){
//            int a = 0, b=0, a1, b1;
//            a = 24-f;
//            b = 60-g;
//            
//            a1 = f1;
//            b1 = g1;
//            
//            hora = (a + a1) - 1;
//            minuto = b + b1;
//            
//            if(minuto>=60){
//                hora = hora + 1;
//                minuto = minuto - 60;
//            }
//   
//        }
//        ////////////////////
//        if(f > f1 && g ==00 && g1 ==00 || g1 !=00 || g !=00){
//            int a = 0, b=0, a1, b1;
//            a = 24-f;
//            b = 60-g;
//            
//            a1 = f1;
//            b1 = g1;
//            
//            hora = (a + a1) - 1;
//            minuto = b + b1;
//            
//            if(minuto>=60){
//                hora = hora + 1;
//                minuto = minuto - 60;
//            }
//   
//        }
//        
//        String horaf = "", minutof ="";
//        
//        if(hora < 10){
//            horaf = ("0" + hora);
//        }else{
//            horaf = String.valueOf(hora);
//        }
//        
//        if(minuto < 10){
//            minutof = ("0" + minuto);
//        }else{
//            minutof = String.valueOf(minuto);
//        }
//        
//        System.out.println("hora: " + horaf + ":"+ minutof +":"+segundo+"0");
    }//GEN-LAST:event_fecha6ItemStateChanged

<<<<<<< HEAD
    private void jDialog1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDialog1KeyPressed
//   char teclaPresionada = evt.getKeyChar();
//         if(teclaPresionada==KeyEvent.VK_ESCAPE){
//            System.out.println("vamo saliendo");
//                    jDialog1.dispose();   
//         }
//        
        
       

    }//GEN-LAST:event_jDialog1KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    jDialog1.setVisible(true);        // TODO add your handling code here:
    lblDiag.setText("A");
    }//GEN-LAST:event_jButton1ActionPerformed
=======
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       DIALOGO.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void DIALOGOKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DIALOGOKeyTyped

    }//GEN-LAST:event_DIALOGOKeyTyped

    private void DIALOGOKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DIALOGOKeyPressed
        
    }//GEN-LAST:event_DIALOGOKeyPressed

    private void DIALOGOFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DIALOGOFocusLost
        
    }//GEN-LAST:event_DIALOGOFocusLost

    private void DIALOGOKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DIALOGOKeyReleased
        KeyboardFocusManager kb = KeyboardFocusManager.getCurrentKeyboardFocusManager();
        kb.addKeyEventPostProcessor(new KeyEventPostProcessor(){
               public boolean postProcessKeyEvent(KeyEvent e){
               if (e.getKeyCode() == KeyEvent.VK_ESCAPE && DIALOGO != null){
                    
                    DIALOGO.dispose();
                    return false;
               }
               return true;
            }
        }
        );
    }//GEN-LAST:event_DIALOGOKeyReleased
>>>>>>> dab3153176f58953379587b83aa858d5aee7b22b

    
    public void hora(){
//        try {
//            
//       
//        Calendar calendario = new GregorianCalendar();
//        
//        int dia = fecha_inicio.getCalendar().get(Calendar.HOUR_OF_DAY);
//        int mes = fecha_inicio.getCalendar().get(Calendar.MINUTE);
//        int anio = fecha_inicio.getCalendar().get(Calendar.SECOND);
//        
//        
////        long s = Long.parseLong(dia+"");
////        long s1 = Long.parseLong(mes+"");
////        long s2 = Long.parseLong(anio+"");
////        
////        int hora =calendario.get(Calendar.HOUR_OF_DAY);
////        int minutos = calendario.get(Calendar.MINUTE);
////        int segundos = calendario.get(Calendar.SECOND);
////        
//        System.out.println(dia);
//        System.out.println(mes);
//        System.out.println(anio);
//         } catch (Exception e) {
//             System.out.println("error" + e.getMessage());
//        }
    }
    
    
    public void fechaaaaaa(){
          Calendar calendar = Calendar.getInstance();

          try {
              
            String fechaSeleccionada = "06/06/1921";
            
             DateFormat dfo = new SimpleDateFormat("dd/MM/yyyy");
             Date fecha = dfo.parse(fechaSeleccionada);
          
                calendar.setTime(fecha);
                              
//                String[] days = new String[] { "SABADO", "DOMINGO", "LUNES", "MARTES", "MIERCOLES", "JUEVES","VIERNES"};

                 String[] days = {"VACIO","DOMINGO", "LUNES", "MARTES", "MIERCOLES", "JUEVES","VIERNES","SABADO"};

                String day = days[calendar.get(Calendar.DAY_OF_WEEK) ];
                
                System.out.println("fecha: " + day);
                
            } catch (ParseException e) {
                e.printStackTrace();
            }
   
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new NewJFrame().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog DIALOGO;
    private com.toedter.calendar.JDateChooser D_FECHA;
    private javax.swing.JTextField TXT_FECHA;
    private javax.swing.JTextField TXT_FECHAAAAAA;
    private javax.swing.JComboBox fecha1;
    private javax.swing.JComboBox fecha2;
    private javax.swing.JComboBox fecha3;
    private javax.swing.JComboBox fecha4;
    private javax.swing.JComboBox fecha5;
    private javax.swing.JComboBox fecha6;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
<<<<<<< HEAD
    private javax.swing.JDialog jDialog1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblDiag;
=======
    private javax.swing.JLabel jLabel1;
>>>>>>> dab3153176f58953379587b83aa858d5aee7b22b
    // End of variables declaration//GEN-END:variables
}
