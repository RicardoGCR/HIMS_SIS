/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.RX;

import java.awt.Color;
import java.awt.KeyEventPostProcessor;
import java.awt.KeyboardFocusManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelos.RX.*;
import modelos.Usuario;
import servicios.Conexion;
import vista.RX.*;

/**
 *
 * @author PC-SISTEMA
 */
public class RX_EC_EXAMEN_CAB extends javax.swing.JFrame implements Runnable{
Conexion conectar=new Conexion();
Connection con;
String hora, minutos, segundos, ampm;
Calendar calendario;
Thread h1;
DefaultTableModel m1, m2,msb1,m3,m4,m5,m6,m7;
static RX_EC_EXAMEN DT = new RX_EC_EXAMEN();

    /**
     * Creates new form RX_EC_EXAMEN_CAB
     */
    public RX_EC_EXAMEN_CAB() {
        initComponents();
        con=conectar.conectar();
        setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.white);
        this.setExtendedState(MAXIMIZED_BOTH);
        jPanel18.setVisible(false);
        jPanel18.setVisible(false);
//        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        PERSONAL_ROL.setLocationRelativeTo(null);
        PERSONAL_ROL.getContentPane().setBackground(Color.white);
        PERSONAL_ROL_TODO.setLocationRelativeTo(null);
        PERSONAL_ROL_TODO.getContentPane().setBackground(Color.white);
        txtHC.setVisible(false);
        txtAM.setVisible(false);
        mostrarArea();
//        CargarPersonalRol();
        CargarPersonalRol_todo();
        
        inicializar_tabla_Examenes_detalle();
        
        //FECHA Y HORA
        h1 = new Thread(this);
        h1.start();
        Calendar cal=Calendar.getInstance();          
        lblFechaReg.setText(fechaActual());
        
        RX_EC_EXAMEN num=new RX_EC_EXAMEN();
        txtNumExamen.setText(num.RX_EC_EXAMEN_generarNum());
        if(txtNumExamen.getText().equalsIgnoreCase("")){
        txtNumExamen.setText("00000001");
        }    
        lblNumExamen.setText(txtNumExamen.getText());

        lblPerB.setVisible(false);
        txtPersonalSolicita.setEnabled(false);
        txtPersonalExamen.setEditable(false);
        txtPersonalRegistraExamen.setEditable(false);
        visible();
        btnGuardarCabeceraEx.setEnabled(false);
//        btnPersonalSolicita.setEnabled(false);
//        btnGuardarDetalle.setEnabled(false);
                
        ///CERRAR DIALOGOS
        addEscapeListenerWindowDialog(PERSONAL_ROL);
        addEscapeListenerWindowDialog(PERSONAL_ROL_TODO);

        //CERRAR CON ESCAPE
        getRootPane().getInputMap(javax.swing.JComponent.WHEN_IN_FOCUSED_WINDOW).put(
        javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0), "Cancel");
        
        getRootPane().getActionMap().put("Cancel", new javax.swing.AbstractAction(){
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                
                cerrar();
                                
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PERSONAL_ROL = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblPerB = new javax.swing.JLabel();
        panelCPT = new javax.swing.JPanel();
        txtBuscarPersonal = new javax.swing.JTextField();
        btnBuscarCPT = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_Personal_rol = new javax.swing.JTable();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        Frontal = new javax.swing.JMenuItem();
        PERSONAL_ROL_TODO = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        panelCPT1 = new javax.swing.JPanel();
        txtBuscarPersonal_TODO = new javax.swing.JTextField();
        btnBuscarCPT1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tb_Personal_rol_todo = new javax.swing.JTable();
        jDateChooserBeanInfo1 = new com.toedter.calendar.JDateChooserBeanInfo();
        jpanel = new javax.swing.JPanel();
        titulo5 = new javax.swing.JLabel();
        lblIDArea = new javax.swing.JLabel();
        lblNomA = new javax.swing.JLabel();
        lblId_Documento_G = new javax.swing.JLabel();
        lblCod_Personal_Sol = new javax.swing.JLabel();
        lblUsu = new javax.swing.JLabel();
        btnGuardarCabeceraEx = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtPersonalSolicita = new javax.swing.JTextField();
        btnPersonalSolicita = new javax.swing.JButton();
        lblHospi = new javax.swing.JLabel();
        lblHospiServ = new javax.swing.JLabel();
        txtHabitacion = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtCama = new javax.swing.JTextField();
        txtId_Documento_G = new javax.swing.JTextField();
        txtCodigoDoc = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        txtNumExamen = new javax.swing.JTextField();
        lblId_Preventa = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_examen_det = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        lblNumExamen = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lblFP = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        lblFechaReg = new javax.swing.JLabel();
        lblHoraReg = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        lblFUA = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        lblCod_Per_R = new javax.swing.JLabel();
        lblCod_Per = new javax.swing.JLabel();
        panelCPT2 = new javax.swing.JPanel();
        txtPersonalRegistraExamen = new javax.swing.JTextField();
        btnPersonalRegistra = new javax.swing.JButton();
        panelCPT3 = new javax.swing.JPanel();
        txtPersonalExamen = new javax.swing.JTextField();
        btnPersonalRealiza = new javax.swing.JButton();
        txtAM = new javax.swing.JTextField();
        lblACTOM = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtNombreP = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDNI = new javax.swing.JLabel();
        txtEdad = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtGenero = new javax.swing.JLabel();
        txtFechaNac = new javax.swing.JLabel();
        txtHC = new javax.swing.JTextField();
        txtHC1 = new javax.swing.JLabel();

        PERSONAL_ROL.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        PERSONAL_ROL.setAlwaysOnTop(true);
        PERSONAL_ROL.setMinimumSize(new java.awt.Dimension(710, 370));
        PERSONAL_ROL.setResizable(false);
        PERSONAL_ROL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PERSONAL_ROLKeyPressed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(230, 230, 230));

        jLabel10.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("PERSONAL RX");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Buscar por DNI. Cargo, Apellidos y Nombres");

        lblPerB.setForeground(new java.awt.Color(230, 230, 230));
        lblPerB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPerB.setText("B1");

        panelCPT.setBackground(new java.awt.Color(255, 255, 255));
        panelCPT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        txtBuscarPersonal.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtBuscarPersonal.setForeground(new java.awt.Color(51, 51, 51));
        txtBuscarPersonal.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtBuscarPersonal.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        txtBuscarPersonal.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtBuscarPersonalCaretUpdate(evt);
            }
        });

        btnBuscarCPT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos/Búsqueda-25.png"))); // NOI18N
        btnBuscarCPT.setContentAreaFilled(false);
        btnBuscarCPT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscarCPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCPTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCPTLayout = new javax.swing.GroupLayout(panelCPT);
        panelCPT.setLayout(panelCPTLayout);
        panelCPTLayout.setHorizontalGroup(
            panelCPTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCPTLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtBuscarPersonal, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarCPT, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3))
        );
        panelCPTLayout.setVerticalGroup(
            panelCPTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCPTLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(panelCPTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtBuscarPersonal, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(btnBuscarCPT, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 319, Short.MAX_VALUE)
                        .addComponent(lblPerB, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(191, 191, 191))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(panelCPT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(lblPerB))
                .addGap(0, 0, 0)
                .addComponent(panelCPT, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        jScrollPane2.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        tb_Personal_rol = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        tb_Personal_rol.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        tb_Personal_rol.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_Personal_rol.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tb_Personal_rol.setRowHeight(32);
        tb_Personal_rol.setSelectionBackground(new java.awt.Color(102, 102, 102));
        tb_Personal_rol.getTableHeader().setReorderingAllowed(false);
        tb_Personal_rol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tb_Personal_rolKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tb_Personal_rol);

        javax.swing.GroupLayout PERSONAL_ROLLayout = new javax.swing.GroupLayout(PERSONAL_ROL.getContentPane());
        PERSONAL_ROL.getContentPane().setLayout(PERSONAL_ROLLayout);
        PERSONAL_ROLLayout.setHorizontalGroup(
            PERSONAL_ROLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        PERSONAL_ROLLayout.setVerticalGroup(
            PERSONAL_ROLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PERSONAL_ROLLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
        );

        Frontal.setText("Frontal");
        jPopupMenu2.add(Frontal);

        PERSONAL_ROL_TODO.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        PERSONAL_ROL_TODO.setAlwaysOnTop(true);
        PERSONAL_ROL_TODO.setMinimumSize(new java.awt.Dimension(692, 360));
        PERSONAL_ROL_TODO.setResizable(false);

        jPanel10.setBackground(new java.awt.Color(230, 230, 230));

        jLabel17.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("PERSONAL RX");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("Buscar por DNI. Cargo, Apellidos y Nombres");

        panelCPT1.setBackground(new java.awt.Color(255, 255, 255));
        panelCPT1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        txtBuscarPersonal_TODO.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtBuscarPersonal_TODO.setForeground(new java.awt.Color(51, 51, 51));
        txtBuscarPersonal_TODO.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtBuscarPersonal_TODO.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        txtBuscarPersonal_TODO.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtBuscarPersonal_TODOCaretUpdate(evt);
            }
        });

        btnBuscarCPT1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos/Búsqueda-25.png"))); // NOI18N
        btnBuscarCPT1.setContentAreaFilled(false);
        btnBuscarCPT1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscarCPT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCPT1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCPT1Layout = new javax.swing.GroupLayout(panelCPT1);
        panelCPT1.setLayout(panelCPT1Layout);
        panelCPT1Layout.setHorizontalGroup(
            panelCPT1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCPT1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtBuscarPersonal_TODO, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarCPT1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3))
        );
        panelCPT1Layout.setVerticalGroup(
            panelCPT1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCPT1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(panelCPT1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtBuscarPersonal_TODO, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(btnBuscarCPT1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelCPT1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addContainerGap(420, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCPT1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel18)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        jScrollPane4.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        tb_Personal_rol_todo = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        tb_Personal_rol_todo.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        tb_Personal_rol_todo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_Personal_rol_todo.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tb_Personal_rol_todo.setRowHeight(32);
        tb_Personal_rol_todo.setSelectionBackground(new java.awt.Color(102, 102, 102));
        tb_Personal_rol_todo.getTableHeader().setReorderingAllowed(false);
        tb_Personal_rol_todo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tb_Personal_rol_todoKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(tb_Personal_rol_todo);

        javax.swing.GroupLayout PERSONAL_ROL_TODOLayout = new javax.swing.GroupLayout(PERSONAL_ROL_TODO.getContentPane());
        PERSONAL_ROL_TODO.getContentPane().setLayout(PERSONAL_ROL_TODOLayout);
        PERSONAL_ROL_TODOLayout.setHorizontalGroup(
            PERSONAL_ROL_TODOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4)
        );
        PERSONAL_ROL_TODOLayout.setVerticalGroup(
            PERSONAL_ROL_TODOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PERSONAL_ROL_TODOLayout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jpanel.setBackground(new java.awt.Color(40, 40, 43));
        jpanel.setPreferredSize(new java.awt.Dimension(285, 415));

        titulo5.setBackground(new java.awt.Color(0, 102, 102));
        titulo5.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        titulo5.setForeground(new java.awt.Color(255, 255, 255));
        titulo5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo5.setText("Exámenes RX");
        titulo5.setToolTipText("");
        titulo5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblIDArea.setForeground(new java.awt.Color(255, 255, 255));
        lblIDArea.setText("jLabel1");

        lblNomA.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblNomA.setForeground(new java.awt.Color(40, 40, 43));
        lblNomA.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNomA.setText("jLabel1");

        lblId_Documento_G.setForeground(new java.awt.Color(255, 255, 255));
        lblId_Documento_G.setText("id_examen_cab");

        lblCod_Personal_Sol.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        lblCod_Personal_Sol.setForeground(new java.awt.Color(255, 255, 255));
        lblCod_Personal_Sol.setText("codPersonal");

        lblUsu.setFont(new java.awt.Font("Segoe UI Semilight", 0, 16)); // NOI18N
        lblUsu.setForeground(new java.awt.Color(255, 255, 255));
        lblUsu.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblUsu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos/User-32.png"))); // NOI18N
        lblUsu.setText("Usuario");

        btnGuardarCabeceraEx.setBackground(new java.awt.Color(34, 113, 179));
        btnGuardarCabeceraEx.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnGuardarCabeceraEx.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardarCabeceraEx.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos/Guardar-32.png"))); // NOI18N
        btnGuardarCabeceraEx.setText("Guardar");
        btnGuardarCabeceraEx.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnGuardarCabeceraEx.setContentAreaFilled(false);
        btnGuardarCabeceraEx.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btnGuardarCabeceraEx.setIconTextGap(30);
        btnGuardarCabeceraEx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCabeceraExActionPerformed(evt);
            }
        });
        btnGuardarCabeceraEx.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnGuardarCabeceraExKeyPressed(evt);
            }
        });

        btnRegresar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos/Casa-32.png"))); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btnRegresar.setIconTextGap(30);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(60, 60, 60)));
        jPanel18.setPreferredSize(new java.awt.Dimension(620, 219));

        jLabel13.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        jLabel13.setText("Médico Solicitante:");

        txtPersonalSolicita.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        txtPersonalSolicita.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPersonalSolicita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPersonalSolicitaActionPerformed(evt);
            }
        });
        txtPersonalSolicita.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPersonalSolicitaKeyPressed(evt);
            }
        });

        btnPersonalSolicita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos/Búsqueda-25.png"))); // NOI18N
        btnPersonalSolicita.setContentAreaFilled(false);
        btnPersonalSolicita.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPersonalSolicita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPersonalSolicitaActionPerformed(evt);
            }
        });
        btnPersonalSolicita.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnPersonalSolicitaKeyPressed(evt);
            }
        });

        lblHospi.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        lblHospi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHospi.setText("Hospitalización:");

        lblHospiServ.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        lblHospiServ.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHospiServ.setText("- - -");

        txtHabitacion.setEditable(false);
        txtHabitacion.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        txtHabitacion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHabitacion.setText("- - -");
        txtHabitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHabitacionActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Habitación");

        jLabel20.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Cama");

        txtCama.setEditable(false);
        txtCama.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        txtCama.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCama.setText("- - -");
        txtCama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCamaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblHospiServ, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblHospi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel18Layout.createSequentialGroup()
                            .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(82, 82, 82)
                            .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtCama)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel13)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(txtPersonalSolicita, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPersonalSolicita, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel13)
                .addGap(0, 0, 0)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPersonalSolicita, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPersonalSolicita, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(lblHospi, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHospiServ)
                .addGap(31, 31, 31)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtId_Documento_G.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtId_Documento_GCaretUpdate(evt);
            }
        });

        txtCodigoDoc.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtCodigoDoc.setText("jTextField1");
        txtCodigoDoc.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtCodigoDocCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout jpanelLayout = new javax.swing.GroupLayout(jpanel);
        jpanel.setLayout(jpanelLayout);
        jpanelLayout.setHorizontalGroup(
            jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUsu, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodigoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId_Documento_G, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jpanelLayout.createSequentialGroup()
                .addGroup(jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpanelLayout.createSequentialGroup()
                                .addComponent(lblCod_Personal_Sol, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblId_Documento_G, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblIDArea)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblNomA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(titulo5)
                            .addComponent(btnGuardarCabeceraEx, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                            .addComponent(btnRegresar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jpanelLayout.setVerticalGroup(
            jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(titulo5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCod_Personal_Sol, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId_Documento_G)
                    .addComponent(lblIDArea)
                    .addComponent(lblNomA))
                .addGap(109, 109, 109)
                .addComponent(btnGuardarCabeceraEx, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(txtCodigoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtId_Documento_G, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(lblUsu, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        txtNumExamen.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        txtNumExamen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumExamenActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        tb_examen_det = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        tb_examen_det.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        tb_examen_det.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Título 5"
            }
        ));
        tb_examen_det.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tb_examen_det.setRowHeight(35);
        tb_examen_det.setSelectionBackground(new java.awt.Color(102, 102, 102));
        tb_examen_det.getTableHeader().setReorderingAllowed(false);
        tb_examen_det.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_examen_detMouseClicked(evt);
            }
        });
        tb_examen_det.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tb_examen_detKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tb_examen_det);

        jLabel21.setFont(new java.awt.Font("Segoe UI Semilight", 0, 16)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(43, 43, 43));
        jLabel21.setText("EXAMENES A REALIZAR");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(51, 51, 51));
        jLabel29.setText("N° de Examen");

        lblNumExamen.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblNumExamen.setForeground(new java.awt.Color(51, 51, 51));
        lblNumExamen.setText("10000");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 51));
        jLabel15.setText("Forma de Pago");

        lblFP.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblFP.setForeground(new java.awt.Color(51, 51, 51));
        lblFP.setText("forma PAGO");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Acto Medico");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(51, 51, 51));
        jLabel24.setText("Fecha de Examen");

        lblFechaReg.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblFechaReg.setForeground(new java.awt.Color(51, 51, 51));
        lblFechaReg.setText("00/00/00");

        lblHoraReg.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblHoraReg.setForeground(new java.awt.Color(51, 51, 51));
        lblHoraReg.setText("00:00:00");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("N° FUA");

        lblFUA.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblFUA.setForeground(new java.awt.Color(153, 153, 0));
        lblFUA.setText("00735650");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(51, 51, 51));
        jLabel26.setText("Registrado");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 51, 51));
        jLabel25.setText("Realizado");

        lblCod_Per_R.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        lblCod_Per_R.setText("jLabel13");

        lblCod_Per.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        lblCod_Per.setText("jLabel13");

        panelCPT2.setBackground(new java.awt.Color(255, 255, 255));
        panelCPT2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        txtPersonalRegistraExamen.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtPersonalRegistraExamen.setForeground(new java.awt.Color(51, 51, 51));
        txtPersonalRegistraExamen.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPersonalRegistraExamen.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        txtPersonalRegistraExamen.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtPersonalRegistraExamenCaretUpdate(evt);
            }
        });

        btnPersonalRegistra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos/Búsqueda-25.png"))); // NOI18N
        btnPersonalRegistra.setContentAreaFilled(false);
        btnPersonalRegistra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPersonalRegistra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPersonalRegistraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCPT2Layout = new javax.swing.GroupLayout(panelCPT2);
        panelCPT2.setLayout(panelCPT2Layout);
        panelCPT2Layout.setHorizontalGroup(
            panelCPT2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCPT2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtPersonalRegistraExamen, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPersonalRegistra, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3))
        );
        panelCPT2Layout.setVerticalGroup(
            panelCPT2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCPT2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(panelCPT2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPersonalRegistraExamen, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(btnPersonalRegistra, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelCPT3.setBackground(new java.awt.Color(255, 255, 255));
        panelCPT3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        txtPersonalExamen.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtPersonalExamen.setForeground(new java.awt.Color(51, 51, 51));
        txtPersonalExamen.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPersonalExamen.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        txtPersonalExamen.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtPersonalExamenCaretUpdate(evt);
            }
        });

        btnPersonalRealiza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos/Búsqueda-25.png"))); // NOI18N
        btnPersonalRealiza.setContentAreaFilled(false);
        btnPersonalRealiza.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPersonalRealiza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPersonalRealizaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCPT3Layout = new javax.swing.GroupLayout(panelCPT3);
        panelCPT3.setLayout(panelCPT3Layout);
        panelCPT3Layout.setHorizontalGroup(
            panelCPT3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCPT3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtPersonalExamen, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPersonalRealiza, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3))
        );
        panelCPT3Layout.setVerticalGroup(
            panelCPT3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCPT3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(panelCPT3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPersonalExamen, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(btnPersonalRealiza, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtAM.setText("jTextField1");

        lblACTOM.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblACTOM.setForeground(new java.awt.Color(51, 51, 51));
        lblACTOM.setText("10000");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(panelCPT2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(panelCPT3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(160, 160, 160)
                                        .addComponent(lblId_Preventa, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(lblCod_Per)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblCod_Per_R))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(37, 37, 37)
                                .addComponent(txtNumExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel29))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblFP, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNumExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(lblACTOM, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtAM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblFechaReg, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblFUA, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(lblHoraReg, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(123, 123, 123))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(lblNumExamen)
                    .addComponent(jLabel24)
                    .addComponent(lblFechaReg)
                    .addComponent(lblHoraReg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(lblFP)
                    .addComponent(jLabel23)
                    .addComponent(lblFUA))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblACTOM))
                .addGap(11, 11, 11)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblId_Preventa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCod_Per)
                                    .addComponent(lblCod_Per_R))
                                .addGap(32, 32, 32)))
                        .addGap(26, 26, 26))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel26)
                            .addComponent(panelCPT2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panelCPT3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtNumExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(145, 145, 145))
        );

        jPanel1.setBackground(new java.awt.Color(209, 52, 56));

        txtNombreP.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        txtNombreP.setForeground(new java.awt.Color(255, 255, 255));
        txtNombreP.setText("jLabel8");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semilight", 0, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("DNI");

        jLabel1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("N° HC");

        jLabel5.setFont(new java.awt.Font("Segoe UI Semilight", 0, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Edad");

        txtDNI.setFont(new java.awt.Font("Segoe UI Semilight", 0, 13)); // NOI18N
        txtDNI.setForeground(new java.awt.Color(255, 255, 255));
        txtDNI.setText("DNI");

        txtEdad.setFont(new java.awt.Font("Segoe UI Semilight", 0, 13)); // NOI18N
        txtEdad.setForeground(new java.awt.Color(255, 255, 255));
        txtEdad.setText("DNI");

        jLabel7.setFont(new java.awt.Font("Segoe UI Semilight", 0, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Género");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semilight", 0, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Fecha Nacimiento");

        txtGenero.setFont(new java.awt.Font("Segoe UI Semilight", 0, 13)); // NOI18N
        txtGenero.setForeground(new java.awt.Color(255, 255, 255));
        txtGenero.setText("DNI");

        txtFechaNac.setFont(new java.awt.Font("Segoe UI Semilight", 0, 13)); // NOI18N
        txtFechaNac.setForeground(new java.awt.Color(255, 255, 255));
        txtFechaNac.setText("DNI");

        txtHC.setText("jTextField1");

        txtHC1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 13)); // NOI18N
        txtHC1.setForeground(new java.awt.Color(255, 255, 255));
        txtHC1.setText("DNI");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombreP, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDNI)
                            .addComponent(txtEdad)
                            .addComponent(txtHC1))
                        .addGap(245, 245, 245)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFechaNac)
                                    .addComponent(txtGenero)))
                            .addComponent(txtHC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txtNombreP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDNI)
                    .addComponent(jLabel7)
                    .addComponent(txtGenero))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(txtFechaNac)
                    .addComponent(txtHC1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEdad)
                    .addComponent(txtHC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jpanel, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tb_Personal_rolKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_Personal_rolKeyPressed
         char teclaPresionada = evt.getKeyChar();

        if(teclaPresionada==KeyEvent.VK_ENTER &&
            this.tb_Personal_rol.getRowCount() == 0 &&
            this.tb_Personal_rol.getSelectedRow() == -1){

            JOptionPane.showMessageDialog(rootPane, "La tabla esta vacia");

        }else
        if(teclaPresionada==KeyEvent.VK_ENTER &&
            this.tb_Personal_rol.getRowCount() != 0 &&
            this.tb_Personal_rol.getSelectedRow() != -1){
            int fila = tb_Personal_rol.getSelectedRow();
            //frm_SALA_OPERACION_TIPO_ANESTESIA T = new frm_SALA_OPERACION_TIPO_ANESTESIA();
            //T.setVisible(true);
            
            String apep, apem, nom;
            apep = tb_Personal_rol.getValueAt(fila, 2).toString();
            apem = tb_Personal_rol.getValueAt(fila, 3).toString();
            nom = tb_Personal_rol.getValueAt(fila, 4).toString();
            
            if(lblPerB.getText().equalsIgnoreCase("B1")){
                txtPersonalExamen.setText(String.valueOf(apep + " " + apem + " " + nom));
                lblCod_Per.setText(String.valueOf(tb_Personal_rol.getValueAt(fila, 1)));
                btnPersonalSolicita.requestFocus();
                btnGuardarCabeceraEx.setEnabled(true);
            }else{
                if(lblPerB.getText().equalsIgnoreCase("B2")){
                    txtPersonalRegistraExamen.setText(String.valueOf(apep + " " + apem + " " + nom));
                    lblCod_Per_R.setText(String.valueOf(tb_Personal_rol.getValueAt(fila, 1)));
                    btnPersonalRealiza.requestFocus();
                }
            }
                                  
            PERSONAL_ROL.dispose();
            txtBuscarPersonal.setText("");
            
//            txtNumeroRegla.setEnabled(false);
//            txtDescripcionRegla.setEnabled(false);
//            btnmodificar.setEnabled(true);
//            btneliminar.setEnabled(true);
        }
    }//GEN-LAST:event_tb_Personal_rolKeyPressed

    private void btnGuardarCabeceraExActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCabeceraExActionPerformed
        guardar_examen_cabecera();
        //mostrar_VER_DETALLE();
//        txtId_Documento_G.setText(txtCodigoDoc.getText());
//        txtAMB.setText(txtAM.getText());
        
        
        
    }//GEN-LAST:event_btnGuardarCabeceraExActionPerformed

    private void txtCodigoDocCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtCodigoDocCaretUpdate
               mostrar_VER_DETALLE();    
               mostrar_FP(txtCodigoDoc.getText());
    }//GEN-LAST:event_txtCodigoDocCaretUpdate

    private void tb_Personal_rol_todoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_Personal_rol_todoKeyPressed
        char teclaPresionada = evt.getKeyChar();

        if(teclaPresionada==KeyEvent.VK_ENTER &&
            this.tb_Personal_rol_todo.getRowCount() == 0 &&
            this.tb_Personal_rol_todo.getSelectedRow() == -1){

            JOptionPane.showMessageDialog(rootPane, "La tabla esta vacia");

        }else
        if(teclaPresionada==KeyEvent.VK_ENTER &&
            this.tb_Personal_rol_todo.getRowCount() != 0 &&
            this.tb_Personal_rol_todo.getSelectedRow() != -1){
            int fila = tb_Personal_rol_todo.getSelectedRow();
           
            String apep, apem, nom;
            apep = tb_Personal_rol_todo.getValueAt(fila, 2).toString();
            apem = tb_Personal_rol_todo.getValueAt(fila, 3).toString();
            nom = tb_Personal_rol_todo.getValueAt(fila, 4).toString();
                     
                txtPersonalSolicita.setText(String.valueOf(apep + " " + apem + " " + nom));
                lblCod_Personal_Sol.setText(String.valueOf(tb_Personal_rol_todo.getValueAt(fila, 1)));
                btnGuardarCabeceraEx.requestFocus();
                
                
                                  
            PERSONAL_ROL_TODO.dispose();
            txtBuscarPersonal_TODO.setText("");
            
//            txtNumeroRegla.setEnabled(false);
//            txtDescripcionRegla.setEnabled(false);
//            btnmodificar.setEnabled(true);
//            btneliminar.setEnabled(true);
        }
    }//GEN-LAST:event_tb_Personal_rol_todoKeyPressed

    private void txtId_Documento_GCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtId_Documento_GCaretUpdate
//        mostrar_Cod_Cabecera(txtId_Documento_G.getText());
    }//GEN-LAST:event_txtId_Documento_GCaretUpdate

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        try {
            this.dispose();
        RX_EC_BUSCAR_EXAMEN_C a = new RX_EC_BUSCAR_EXAMEN_C();
        a.setVisible(true);
        
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void tb_examen_detKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_examen_detKeyPressed

       
    }//GEN-LAST:event_tb_examen_detKeyPressed

    private void tb_examen_detMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_examen_detMouseClicked
        //        if(evt.getClickCount()==1){
            //         try{
                //                        if( tb_examen_det.getRowCount()>0){
                    //                        int filaselec=tb_examen_det.getSelectedRow();
                    //
                    //                            lblId_cod_doc_det.setText(tb_examen_det.getValueAt(filaselec, 0).toString());
                    //                            txtCodigoCPT.setText(tb_examen_det.getValueAt(filaselec, 1).toString());
                    //                            txtNomenclatura.setText(tb_examen_det.getValueAt(filaselec, 2).toString());
                    //
                    //
                    //
                    //                        }
                //        }catch(Exception e){
                //            JOptionPane.showMessageDialog(this, "cargar"+e.getMessage());
                //        }
            //       }
    }//GEN-LAST:event_tb_examen_detMouseClicked

    private void btnPersonalSolicitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPersonalSolicitaActionPerformed
        PERSONAL_ROL_TODO.setVisible(true);
        txtBuscarPersonal_TODO.requestFocus();
    }//GEN-LAST:event_btnPersonalSolicitaActionPerformed

    private void txtPersonalSolicitaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPersonalSolicitaKeyPressed
        //        char tecla= evt.getKeyChar();
        //        if(tecla==KeyEvent.VK_ENTER){
            //            personal.setVisible(true);
            //            txtBuscar.setText("");
            //            Personal_cargar();
            //            Personal_formato();
            //        }
    }//GEN-LAST:event_txtPersonalSolicitaKeyPressed

    private void txtPersonalSolicitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPersonalSolicitaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPersonalSolicitaActionPerformed

    private void txtCamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCamaActionPerformed

    private void txtHabitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHabitacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHabitacionActionPerformed

    private void txtNumExamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumExamenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumExamenActionPerformed

    private void btnPersonalSolicitaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnPersonalSolicitaKeyPressed
        char tecla= evt.getKeyChar();
                if(tecla==KeyEvent.VK_ENTER){  
                    btnPersonalSolicita.doClick();                    
        }
    }//GEN-LAST:event_btnPersonalSolicitaKeyPressed

    private void btnGuardarCabeceraExKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnGuardarCabeceraExKeyPressed
        char tecla= evt.getKeyChar();
                if(tecla==KeyEvent.VK_ENTER){  
                    btnGuardarCabeceraEx.doClick();
        }
    }//GEN-LAST:event_btnGuardarCabeceraExKeyPressed

    private void PERSONAL_ROLKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PERSONAL_ROLKeyPressed
        KeyboardFocusManager kb = KeyboardFocusManager.getCurrentKeyboardFocusManager();
               kb.addKeyEventPostProcessor(new KeyEventPostProcessor(){
                public boolean postProcessKeyEvent(KeyEvent e){
                if (e.getKeyCode() == KeyEvent.VK_ESCAPE && this != null){
                    
                    PERSONAL_ROL.dispose();
                    return false;
                }
                return true;
            }
        });
    }//GEN-LAST:event_PERSONAL_ROLKeyPressed

    private void txtBuscarPersonalCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtBuscarPersonalCaretUpdate
         buscarPersonal();
       
    }//GEN-LAST:event_txtBuscarPersonalCaretUpdate

    private void btnBuscarCPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCPTActionPerformed
        buscarPersonal();
    }//GEN-LAST:event_btnBuscarCPTActionPerformed

    private void txtBuscarPersonal_TODOCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtBuscarPersonal_TODOCaretUpdate
         buscarPersonal_todo();
 
    }//GEN-LAST:event_txtBuscarPersonal_TODOCaretUpdate

    private void btnBuscarCPT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCPT1ActionPerformed
         buscarPersonal_todo();
    }//GEN-LAST:event_btnBuscarCPT1ActionPerformed

    private void txtPersonalRegistraExamenCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtPersonalRegistraExamenCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPersonalRegistraExamenCaretUpdate

    private void btnPersonalRegistraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPersonalRegistraActionPerformed
        PERSONAL_ROL.setVisible(true);
        //        tb_Personal_rol.getSelectionModel().setSelectionInterval(0, 0);
        //        tb_Personal_rol.requestFocus();
        txtBuscarPersonal.requestFocus();
        lblPerB.setText("B2");
         buscarPersonal();
    }//GEN-LAST:event_btnPersonalRegistraActionPerformed

    private void txtPersonalExamenCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtPersonalExamenCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPersonalExamenCaretUpdate

    private void btnPersonalRealizaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPersonalRealizaActionPerformed
       PERSONAL_ROL.setVisible(true);
        txtBuscarPersonal_TODO.requestFocus();
        lblPerB.setText("B1");
        buscarPersonal_todo();
    }//GEN-LAST:event_btnPersonalRealizaActionPerformed

    public void guardarDetalleExamen(){
        int id = Integer.parseInt(txtId_Documento_G.getText());
        
         for (int i = 0; i < tb_examen_det.getRowCount(); i++){      
               RX_EC_EXAMEN_DET dd=new RX_EC_EXAMEN_DET();
               dd.setID_EXAMEN_CAB(id);
               dd.setID_COD_DOC_DET(Integer.parseInt(tb_examen_det.getValueAt(i, 0).toString()));
               
               if(lblCod_Personal_Sol.getText().equalsIgnoreCase("") || txtPersonalSolicita.getText().equalsIgnoreCase("")){
                    dd.setCOD_PER_SOL(String.valueOf("- - -"));
                    dd.setNOM_PER_SOL(String.valueOf("- - -"));                 
               }else{
                    dd.setCOD_PER_SOL(lblCod_Personal_Sol.getText());
                    dd.setNOM_PER_SOL(txtPersonalSolicita.getText());
               }

               dd.setINCIDENCIA(tb_examen_det.getValueAt(i, 3).toString());
               dd.setID_PREVENTA(lblId_Preventa.getText());
               dd.setHAB_NOM(txtHabitacion.getText());
               dd.setCA_DESC(txtCama.getText());
               dd.setHOSP_SERVICIO(lblHospiServ.getText());             
               dd.setNOM_USU(lblUsu.getText());
               dd.RX_EC_EXAMEN_DETALLE_GUARDAR();               
            }     
    }
    
    public void mostrarHospitalizacion(int AM){
        String consulta="";
        try {
            consulta="EXEC RX_EC_EXAMEN_HOSPITALIZACION ?";
            PreparedStatement cmd = DT.getCn().prepareStatement(consulta);
            cmd.setInt(1, AM);
            ResultSet r= cmd.executeQuery();
            int c=1;
            while(r.next()){
                lblHospiServ.setText(r.getString(5));
                txtHabitacion.setText(r.getString(3));
                txtCama.setText(r.getString(4));
                lblId_Preventa.setText(r.getString(2));
            }
            
        } catch (Exception e) {
            System.out.println("Error carga HOSPITALIZADO: " + e.getMessage());
        }
    }
    
    public void buscarPersonal(){
        String consulta="";
        try {
            tb_Personal_rol.setModel(new DefaultTableModel());
            String titulos[]={"Nº","Cod. Per","Apellido Paterno","Apellido Materno","Nombres","Cargo","Servicio",
                 "Cod. Servicio"};
            m2=new DefaultTableModel(null,titulos);
            JTable p=new JTable(m2);
            String fila[]=new String[8];

            RX_EC_EXAMEN obj=new RX_EC_EXAMEN();
                    consulta="exec RX_EC_PERSONAL_BUSCAR ?";
                    
            PreparedStatement cmd = obj.getCn().prepareStatement(consulta);
            cmd.setString(1, txtBuscarPersonal.getText());
            ResultSet r= cmd.executeQuery();
            int c=1;
            while(r.next()){
                fila[0]=String.valueOf(c)+"º";
                fila[1]=r.getString(1);
                fila[2]=r.getString(2);
                fila[3]=r.getString(3);
                fila[4]=r.getString(4);
                fila[5]=r.getString(5);
                fila[6]=r.getString(6);
                fila[7]=r.getString(7);
                m2.addRow(fila);
                c++;
            }
            tb_Personal_rol.setModel(m2);
            TableRowSorter<TableModel> elQueOrdena=new TableRowSorter<TableModel>(m2);
            tb_Personal_rol.setRowSorter(elQueOrdena);
            this.tb_Personal_rol.setModel(m2);
            
            formato_Personal_Rol();
            
        } catch (Exception e) {
            System.out.println("Error BUSCAR PER: " + e.getMessage());
        }
    }
    
    public void mostrarArea(){
        String consulta="";
        try {
            consulta="EXEC RX_EC_SERVICIO ";
            PreparedStatement cmd = DT.getCn().prepareStatement(consulta);        
            ResultSet r= cmd.executeQuery();
            int c=1;
            while(r.next()){
                lblIDArea.setText(r.getString(1));
                lblNomA.setText(r.getString(2));
            }
            
        } catch (Exception e) {
            System.out.println("Error carga area : " + e.getMessage());
        }
    }

    
    public void formato_Personal_Rol(){
        tb_Personal_rol.getColumnModel().getColumn(0).setPreferredWidth(30);
        tb_Personal_rol.getColumnModel().getColumn(1).setPreferredWidth(80);
        tb_Personal_rol.getColumnModel().getColumn(2).setPreferredWidth(150);
        tb_Personal_rol.getColumnModel().getColumn(3).setPreferredWidth(150);  
        tb_Personal_rol.getColumnModel().getColumn(4).setPreferredWidth(200); 
        tb_Personal_rol.getColumnModel().getColumn(5).setPreferredWidth(150); 
       
    }
    
    public void formato_Personal_Rol_todo(){
        tb_Personal_rol_todo.getColumnModel().getColumn(0).setPreferredWidth(30);
        tb_Personal_rol_todo.getColumnModel().getColumn(1).setPreferredWidth(80);
        tb_Personal_rol_todo.getColumnModel().getColumn(2).setPreferredWidth(150);
        tb_Personal_rol_todo.getColumnModel().getColumn(3).setPreferredWidth(150);  
        tb_Personal_rol_todo.getColumnModel().getColumn(4).setPreferredWidth(200); 
        tb_Personal_rol_todo.getColumnModel().getColumn(5).setPreferredWidth(150); 
         
    }
    
    public void guardar_examen_cabecera(){
        ImageIcon i=new ImageIcon(this.getClass().getResource("/imagenes/iconos/guardar16x16.png"));

        try{          
                if(txtPersonalExamen.getText().equalsIgnoreCase("") || txtPersonalRegistraExamen.getText().equalsIgnoreCase("")){
                    JOptionPane.showMessageDialog(rootPane, "Verifique si ha seleccionado el personal");
                }
                else{

                    int guardar = JOptionPane.showConfirmDialog(this, "¿Está seguro que desea GUARDAR los datos?",
                        "Atención", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,i);
                    if(guardar == 0 ){
                        RX_EC_EXAMEN rxg = new RX_EC_EXAMEN();
                        rxg.setID_DOCUMENTO(txtCodigoDoc.getText());
                        rxg.setNUMERO_EXAMEN(lblNumExamen.getText());
                        rxg.setCOD_PERSONAL_EXAMEN(lblCod_Per.getText());
                        rxg.setNOMBRE_PERSONAL_EXAMEN(txtPersonalExamen.getText());
                        rxg.setCOD_PERSONAL_EXAMEN_REG(lblCod_Per_R.getText());
                        rxg.setNOMBRE_PERSONAL_EXAMEN_REG(txtPersonalRegistraExamen.getText());                       
                        rxg.setNOM_PC(lblUsu.getText());

                        if(rxg.RX_EC_EXAMEN_GUARDAR()){
                            
                            if(tb_examen_det.getRowCount()!=0){
                            JOptionPane.showMessageDialog(null, "Datos Guardados");
                            txtId_Documento_G.setText(rxg.RX_EC_ID_CAB_RX());
//                                RX_EC_ESTADO_RESULTADO_MODIFICAR_CAJA_EC();
                                
                                    RX_EC_ESTADO_MODIFICAR();
                                    guardarDetalleExamen();
                                    DESHABILITAR();
                                }                                          
                        }
                        else{
                            JOptionPane.showMessageDialog(this, "El registro ya existe\nIntente nuevamente");

                        }}
                    }
            
        }catch(Exception e){
                 JOptionPane.showMessageDialog(this, "Ingrese todos los campos");
        }

    }
    
    public void inicializar_tabla_Examenes_detalle(){       
        try {
            
            String titulosb[]={"Cod. Documento Det.","Cod. Nomenclatura","Descripción Nomenclatura",
            "Incidencia","Placas Usadas","Medidas","Producto"};
            msb1=new DefaultTableModel(null,titulosb);
            JTable psb=new JTable(msb1);
            String filasb[]=new String[7];
            tb_examen_det.setModel(msb1);
            TableRowSorter<TableModel> elQueOrdenasb=new TableRowSorter<TableModel>(msb1);
            tb_examen_det.setRowSorter(elQueOrdenasb);
            tb_examen_det.setModel(msb1);
            
            formatoExamen_detalle();
            
        } catch (Exception e) {
            System.out.println("error inicializar tabla_RV: " + e);
        }
            
    }
    
    public void formatoExamen_detalle(){                    
            tb_examen_det.getColumnModel().getColumn(0).setPreferredWidth(80); 
            tb_examen_det.getColumnModel().getColumn(1).setPreferredWidth(130);
            tb_examen_det.getColumnModel().getColumn(2).setPreferredWidth(350);
            tb_examen_det.getColumnModel().getColumn(3).setPreferredWidth(100);
            tb_examen_det.getColumnModel().getColumn(4).setPreferredWidth(100);
            tb_examen_det.getColumnModel().getColumn(5).setPreferredWidth(100);
            tb_examen_det.getColumnModel().getColumn(6).setPreferredWidth(300);
            //Ocultar
            tb_examen_det.getColumnModel().getColumn(0).setMinWidth(0);
            tb_examen_det.getColumnModel().getColumn(0).setMaxWidth(0);    
    }
    
    public void mostrar_VER_DETALLE(){
        try {
                    
                        //detalle
                        String consulta="";
                        tb_examen_det.setModel(new DefaultTableModel());
                        String titulos[]={"Cod. Documento Det.","Cod. Nomenclatura","Descripción Nomenclatura",
                           "Incidencia" ,"Placas Usadas", "Medida","Producto"};
                        m3=new DefaultTableModel(null,titulos);
                        JTable p=new JTable(m3);
                        String fila[]=new String[7];
                        Usuario obj=new Usuario();
                        consulta="exec RX_EC_VER_DETALLE_EXAMEN ?";
                        PreparedStatement cmd = obj.getCn().prepareStatement(consulta);
                        cmd.setString(1, txtCodigoDoc.getText());
                        ResultSet r= cmd.executeQuery();
                        int i=0, usado=0;
                        while(r.next()){
//                        for (int i=0; i<5; i++){
                        fila[0]=r.getString(1);
                        fila[1]=r.getString(2); 
                        fila[2]=r.getString(3); 
                        fila[3]=r.getString(4);
                        
                        usado = (r.getInt(5));
                
                        BigDecimal bd2 = new BigDecimal(usado);

                        bd2 = bd2.setScale(0, BigDecimal.ROUND_HALF_UP);
                        
                        fila[4]="0" + bd2;
                        fila[5]=r.getString(6); 
                        fila[6]=r.getString(7);
//                      
                        
                          m3.addRow(fila);
                        }
                        tb_examen_det.setModel(m3);
                        TableRowSorter<TableModel> elQueOrdena=new TableRowSorter<TableModel>(m3);
                        tb_examen_det.setRowSorter(elQueOrdena);
                        tb_examen_det.setModel(m3);

                        formatoExamen_detalle();           
                      
        } catch (Exception e) {
            System.out.println("Error MOSTRAR VER DETALLE: " + e.getMessage());
        }
        
    }
    
    public void buscarPersonal_todo(){
        String consulta="";
        try {
            tb_Personal_rol_todo.setModel(new DefaultTableModel());
            String titulos[]={"Nº","Cod. Per","Apellido Paterno","Apellido Materno","Nombres","Cargo"};
            m4=new DefaultTableModel(null,titulos);
            JTable p=new JTable(m4);
            String fila[]=new String[6];

            RX_EC_EXAMEN obj=new RX_EC_EXAMEN();
                    consulta="exec RX_EC_PERSONAL_BUSCAR_TODO ?";
                    
            PreparedStatement cmd = obj.getCn().prepareStatement(consulta);
            cmd.setString(1, txtBuscarPersonal_TODO.getText());
            ResultSet r= cmd.executeQuery();
            int c=1;
            while(r.next()){
                fila[0]=String.valueOf(c)+"º";
                fila[1]=r.getString(1);
                fila[2]=r.getString(2);
                fila[3]=r.getString(3);
                fila[4]=r.getString(4);
                fila[5]=r.getString(5);
                
                m4.addRow(fila);
                c++;
            }
            tb_Personal_rol_todo.setModel(m4);
            TableRowSorter<TableModel> elQueOrdena=new TableRowSorter<TableModel>(m4);
            tb_Personal_rol_todo.setRowSorter(elQueOrdena);
            this.tb_Personal_rol_todo.setModel(m4);
            
            formato_Personal_Rol_todo();
            
        } catch (Exception e) {
            System.out.println("Error BUSCAR PER TODO: " + e.getMessage());
        }
    }
    
    public void CargarPersonalRol_todo(){
        try {
             String titulos[]={"Nº","Cod. Per","Apellido Paterno","Apellido Materno","Nombres","Cargo"};
            m5=new DefaultTableModel(null,titulos);
            JTable p=new JTable(m5);
            String fila[]=new String[6];

        String consulta="exec RX_EC_PERSONAL_LISTAR_TODO";
        ResultSet r;
        
        r=conectar.Listar(consulta);
        int c=1;
        while(r.next()){
            fila[0]=String.valueOf(c)+"º";
            fila[1]=r.getString(1);
            fila[2]=r.getString(2);
            fila[3]=r.getString(3);
            fila[4]=r.getString(4);
            fila[5]=r.getString(5);
            
                m5.addRow(fila);
                c++;
            }
            tb_Personal_rol_todo.setModel(m5);
            TableRowSorter<TableModel> elQueOrdena=new TableRowSorter<TableModel>(m5);
            tb_Personal_rol_todo.setRowSorter(elQueOrdena);
            this.tb_Personal_rol_todo.setModel(m5);
            formato_Personal_Rol_todo();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error en la tabla");
        }
    }
       
    public void mostrar_Cod_Cabecera(String cod){
        String consulta="";
        try {
            consulta="EXEC RX_EC_EXAMEN_COD_CAB ?";
            PreparedStatement cmd = DT.getCn().prepareStatement(consulta);
            cmd.setString(1, cod);
            ResultSet r= cmd.executeQuery();
            int c=1;
            while(r.next()){
                lblId_Documento_G.setText(r.getString(1));
                
            }
            
        } catch (Exception e) {
            System.out.println("Error carga cod cabecera: " + e.getMessage());
        }
    }
       
    public void guardar_examen_detalle(){
        ImageIcon i=new ImageIcon(this.getClass().getResource("/imagenes/iconos/guardar16x16.png"));
        
        try{          
                if(txtPersonalSolicita.getText().equalsIgnoreCase("")){
                    JOptionPane.showMessageDialog(rootPane, "Verifique si ha seleccionado el personal");
                }
                else{

                    int guardar = JOptionPane.showConfirmDialog(this, "¿Está seguro que desea GUARDAR los datos?",
                        "Atención", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,i);
                    if(guardar == 0 ){
                        RX_EC_EXAMEN_DET g = new RX_EC_EXAMEN_DET();
                        JOptionPane.showMessageDialog(null, "Datos Guardados");
                        guardarDetalleExamen();
                        RX_EC_ESTADO_MODIFICAR();
                            //limpiar();
                            //deshabilitar();
                            //btnguardar.setEnabled(false);                       
                        }
                    }
            
        }catch(Exception e){
                System.out.println("error guardar detalle" + e);
        }

    }
    
    public void RX_EC_ESTADO_MODIFICAR(){
        for (int i = 0; i < tb_examen_det.getRowCount(); i++){ 
        RX_EC_EXAMEN_DET m=new RX_EC_EXAMEN_DET();
        m.RX_EC_Estado_Caja(Integer.parseInt(tb_examen_det.getValueAt(i, 0).toString()));    
        }
    }
    
    public void mostrar_FP(String cod){
        String consulta="";
        try {
            consulta="EXEC RX_EC_FP ?";
            PreparedStatement cmd = DT.getCn().prepareStatement(consulta);
            cmd.setString(1, cod);
            ResultSet r= cmd.executeQuery();
            int c=1;
            while(r.next()){
                lblFP.setText(r.getString(1));
                lblFUA.setText("FUA  "+r.getString(2));
                
            }
            
        } catch (Exception e) {
            System.out.println("Error carga cod cabecera: " + e.getMessage());
        }
    }
    
    private void Clear_Tb_GuardarDetalle(){
        DefaultTableModel modelo1 = (DefaultTableModel)tb_examen_det.getModel(); 
        int b=tb_examen_det.getRowCount();
        for(int j=0;j<b;j++){
                    modelo1.removeRow(0);
        }
    }
    
//    public void mostrar_Insumo_Cantidad(String cod){
//        String consulta="";
//        try {
//            consulta="EXEC RX_EC_EXAMEN_ALMACEN_CARGAR_ALMACEN ?";
//            PreparedStatement cmd = DT.getCn().prepareStatement(consulta);
//            cmd.setString(1, cod);
//            ResultSet r= cmd.executeQuery();
//            int c=1, usado=0;
//            while(r.next()){
//                
//                txtInsumo.setText(r.getString(1));
//                usado = (r.getInt(2));
//                
//                BigDecimal bd2 = new BigDecimal(usado);
//         
//       
//                bd2 = bd2.setScale(0, BigDecimal.ROUND_HALF_UP);
//
//                txtPlacasUsadas.setText(bd2.toString());
//               
//            }
//            
//        } catch (Exception e) {
//            System.out.println("Error carga PLACAS USADAS, INSUMO: " + e.getMessage());
//        }
//    }
//    
    
    public void DESHABILITAR(){
        btnPersonalSolicita.setEnabled(false);
//        btnRegresar.setEnabled(false);
        txtPersonalRegistraExamen.setEditable(false);
        btnPersonalRegistra.setEnabled(false);
        txtPersonalExamen.setEditable(false);
        btnPersonalRealiza.setEnabled(false);
        btnGuardarCabeceraEx.setEnabled(false);
        
    }
    
    public void visible(){
        lblCod_Per.setVisible(false);
        lblCod_Per_R.setVisible(false);
        lblCod_Personal_Sol.setVisible(false);
        txtNumExamen.setVisible(false);
        txtCodigoDoc.setVisible(false);
        txtId_Documento_G.setVisible(false);
        lblId_Documento_G.setVisible(false);
        lblId_Preventa.setVisible(false);
        lblIDArea.setVisible(false);
        lblPerB.setVisible(false);
    }
    
    public static String fechaActual(){
        Date now = new Date(System.currentTimeMillis());
        SimpleDateFormat date = new SimpleDateFormat("dd/MM/yyyy");
        return date.format(now);
    }
    
    public void calcula() {
        Calendar calendario = new GregorianCalendar();
        java.util.Date fechaHoraActual = new java.util.Date();


        calendario.setTime(fechaHoraActual);
        ampm = calendario.get(Calendar.AM_PM) == Calendar.AM ? "AM" : "PM";

        if (ampm.equals("PM")) {
            int h = calendario.get(Calendar.HOUR_OF_DAY) - 12;
            hora = h > 9 ? "" + h : "0" + h;
        } else {
            hora = calendario.get(Calendar.HOUR_OF_DAY) > 9 ? "" + calendario.get(Calendar.HOUR_OF_DAY) : "0" + calendario.get(Calendar.HOUR_OF_DAY);
        }
        minutos = calendario.get(Calendar.MINUTE) > 9 ? "" + calendario.get(Calendar.MINUTE) : "0" + calendario.get(Calendar.MINUTE);
        segundos = calendario.get(Calendar.SECOND) > 9 ? "" + calendario.get(Calendar.SECOND) : "0" + calendario.get(Calendar.SECOND);
    }
    
    public static void addEscapeListenerWindowDialog( final JDialog windowDialog) {
       ActionListener escAction = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
        windowDialog.dispose();
        }
        };
        windowDialog.getRootPane().registerKeyboardAction(escAction,
        KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
        JComponent.WHEN_IN_FOCUSED_WINDOW);
   }
    
    public void cerrar(){
        int eleccion = JOptionPane.showConfirmDialog(rootPane,"¿Desea realmente salir del formulario?","Mensaje de Confirmación",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE);
        if (eleccion == JOptionPane.YES_OPTION)
        {
            dispose();   
//            PrincipalMDI MDI= new PrincipalMDI();
//            MDI.setVisible(true);  
        }else{
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RX_EC_EXAMEN_CAB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RX_EC_EXAMEN_CAB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RX_EC_EXAMEN_CAB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RX_EC_EXAMEN_CAB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RX_EC_EXAMEN_CAB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Frontal;
    private javax.swing.JDialog PERSONAL_ROL;
    private javax.swing.JDialog PERSONAL_ROL_TODO;
    private javax.swing.JButton btnBuscarCPT;
    private javax.swing.JButton btnBuscarCPT1;
    private javax.swing.JButton btnGuardarCabeceraEx;
    public static javax.swing.JButton btnPersonalRealiza;
    public static javax.swing.JButton btnPersonalRegistra;
    private javax.swing.JButton btnPersonalSolicita;
    private javax.swing.JButton btnRegresar;
    private com.toedter.calendar.JDateChooserBeanInfo jDateChooserBeanInfo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    public static javax.swing.JLabel jLabel19;
    public static javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel jpanel;
    public static javax.swing.JLabel lblACTOM;
    private javax.swing.JLabel lblCod_Per;
    private javax.swing.JLabel lblCod_Per_R;
    private javax.swing.JLabel lblCod_Personal_Sol;
    private javax.swing.JLabel lblFP;
    private javax.swing.JLabel lblFUA;
    private javax.swing.JLabel lblFechaReg;
    private javax.swing.JLabel lblHoraReg;
    public static javax.swing.JLabel lblHospi;
    public static javax.swing.JLabel lblHospiServ;
    public static javax.swing.JLabel lblIDArea;
    private javax.swing.JLabel lblId_Documento_G;
    private javax.swing.JLabel lblId_Preventa;
    public static javax.swing.JLabel lblNomA;
    private javax.swing.JLabel lblNumExamen;
    private javax.swing.JLabel lblPerB;
    public static javax.swing.JLabel lblUsu;
    private javax.swing.JPanel panelCPT;
    private javax.swing.JPanel panelCPT1;
    private javax.swing.JPanel panelCPT2;
    private javax.swing.JPanel panelCPT3;
    private javax.swing.JTable tb_Personal_rol;
    private javax.swing.JTable tb_Personal_rol_todo;
    public static javax.swing.JTable tb_examen_det;
    private javax.swing.JLabel titulo5;
    public static javax.swing.JTextField txtAM;
    public static javax.swing.JTextField txtBuscarPersonal;
    public static javax.swing.JTextField txtBuscarPersonal_TODO;
    public static javax.swing.JTextField txtCama;
    public static javax.swing.JTextField txtCodigoDoc;
    public static javax.swing.JLabel txtDNI;
    public static javax.swing.JLabel txtEdad;
    public static javax.swing.JLabel txtFechaNac;
    public static javax.swing.JLabel txtGenero;
    public static javax.swing.JTextField txtHC;
    public static javax.swing.JLabel txtHC1;
    public static javax.swing.JTextField txtHabitacion;
    private javax.swing.JTextField txtId_Documento_G;
    public static javax.swing.JLabel txtNombreP;
    private javax.swing.JTextField txtNumExamen;
    public static javax.swing.JTextField txtPersonalExamen;
    public static javax.swing.JTextField txtPersonalRegistraExamen;
    private javax.swing.JTextField txtPersonalSolicita;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    Thread ct = Thread.currentThread();
        while (ct == h1) {
            calcula();

            
            
            lblHoraReg.setText(hora + ":" + minutos + ":" + segundos + " " + ampm);
            try {
                Thread.sleep(7000);
            } catch (InterruptedException e) {
            }
        }
    }
}
