/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.EC;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelos.EC.EC_EXAMEN_CABECERA;
import modelos.Usuario;
import servicios.Conexion;
import static vista.EC.EC_EXAMEN_CAB.btnPersonalRealiza_EC;
import static vista.EC.EC_EXAMEN_CAB.btnPersonalRegistra_EC;
import static vista.EC.EC_EXAMEN_CAB.btnPersonalSolicita;
import static vista.EC.EC_EXAMEN_CAB.tb_examen_det_EC;
import static vista.EC.EC_EXAMEN_CAB.txtCOD_CABECERA;

/**
 *
 * @author MYS3
 */
public class EC_BUSCAR_EXAMEN_CAJA extends javax.swing.JFrame implements Runnable{
Conexion conectar=new Conexion();
Connection con;
String hora, minutos, segundos, ampm;
Calendar calendario;
Thread h1;
ResultSet r;
CallableStatement cst;
DefaultTableModel m1,m2, msb, m3, m4;
static EC_EXAMEN_CABECERA EC = new EC_EXAMEN_CABECERA();
    /**
     * Creates new form EC_BUSCAR_EXAMEN_CAJA
     */
    public EC_BUSCAR_EXAMEN_CAJA(){
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.white);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/iconos/icons8-Tarea del sistema-24.png")).getImage());
        
        
        DETALLE.setLocationRelativeTo(null);
        DETALLE.getContentPane().setBackground(Color.white);
        
        //FECHA Y HORA
        h1 = new Thread(this);
        h1.start();
        Calendar cal=Calendar.getInstance();          
        lblFecha_EC.setText(fechaActual());
        
        mostrarArea_EC();
        seleccion_EC();
        lblG_EC.setVisible(false);
        lblFecha_EC.setVisible(false);
        lblHora_EC.setVisible(false);
        lblNumeArea_EC.setVisible(false);
        txtBuscarPaciente_EC.requestFocus();
        lblEdad_EC_D.setVisible(false);
        lblFechaNaci_EC_D.setVisible(false);
        lblGenero_EC_D.setVisible(false);
        lblIDArea_EC_D.setVisible(false);
        lblUsuD_EC_D.setVisible(false);
        
        //mostrarPacientes_EC();
        
        //CERRAR CON ESCAPE
        getRootPane().getInputMap(javax.swing.JComponent.WHEN_IN_FOCUSED_WINDOW).put(
        javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0), "Cancel");
        
        getRootPane().getActionMap().put("Cancel", new javax.swing.AbstractAction(){
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                
                cerrar();
                                
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DETALLE = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb_Detalle_EC_D = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        lblNumero = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        lblFechaNaci_EC_D = new javax.swing.JLabel();
        lblGenero_EC_D = new javax.swing.JLabel();
        lblEdad_EC_D = new javax.swing.JLabel();
        lblIDArea_EC_D = new javax.swing.JLabel();
        lblNomAD_EC_D = new javax.swing.JLabel();
        lblUsuD_EC_D = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDNI_EC_D = new javax.swing.JTextField();
        txtDocumento_EC_D = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtAM_EC_D = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtHC_EC_D = new javax.swing.JTextField();
        txtNombres_EC_D = new javax.swing.JTextField();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        detalle = new javax.swing.JMenuItem();
        jpanel = new javax.swing.JPanel();
        titulo5 = new javax.swing.JLabel();
        lblUsu = new javax.swing.JLabel();
        fecha_inicio_EC = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbFecha_EC = new javax.swing.JCheckBox();
        fecha_fin_EC = new com.toedter.calendar.JDateChooser();
        EC_BUSCAR_FECHAS = new javax.swing.JButton();
        jPanel23 = new javax.swing.JPanel();
        txtBuscarPaciente_EC = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_Examen_EC = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        lblfecha_F2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lblfecha_I_EC = new javax.swing.JLabel();
        lblG_EC = new javax.swing.JLabel();
        lblfecha_F_EC = new javax.swing.JLabel();
        lblFecha_EC = new javax.swing.JLabel();
        lblNumeArea_EC = new javax.swing.JLabel();
        lblHora_EC = new javax.swing.JLabel();
        lblNomArea_EC = new javax.swing.JLabel();

        DETALLE.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        DETALLE.setMinimumSize(new java.awt.Dimension(705, 400));

        tb_Detalle_EC_D = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        tb_Detalle_EC_D.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        tb_Detalle_EC_D.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_Detalle_EC_D.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tb_Detalle_EC_D.setRowHeight(25);
        tb_Detalle_EC_D.setSelectionBackground(new java.awt.Color(40, 112, 99));
        tb_Detalle_EC_D.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tb_Detalle_EC_D);

        jLabel10.setFont(new java.awt.Font("Segoe UI Light", 1, 23)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("DETALLE");

        jPanel1.setBackground(new java.awt.Color(255, 51, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 51)));

        jLabel11.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("El paciente tiene ");

        lblNumero.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        lblNumero.setForeground(new java.awt.Color(255, 255, 255));
        lblNumero.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNumero.setText("jLabel12");

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("examen(es) pendiente(es). Â¿ Desea cargar ?");

        jButton2.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("OK");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton2.setContentAreaFilled(false);
        jButton2.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton2.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton2.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(0, 0, 0)
                .addComponent(lblNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel11)
                .addComponent(lblNumero)
                .addComponent(jLabel12)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, Short.MAX_VALUE))
        );

        lblFechaNaci_EC_D.setText("jLabel13");

        lblGenero_EC_D.setText("jLabel13");

        lblEdad_EC_D.setText("jLabel13");

        lblIDArea_EC_D.setText("jLabel13");

        lblNomAD_EC_D.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNomAD_EC_D.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNomAD_EC_D.setText("jLabel14");

        lblUsuD_EC_D.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        lblUsuD_EC_D.setText("jLabel14");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        jLabel5.setText("Cod. Doc.:");

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        jLabel6.setText("DNI:");

        txtDNI_EC_D.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtDNI_EC_D.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDNI_EC_D.setEnabled(false);

        txtDocumento_EC_D.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtDocumento_EC_D.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDocumento_EC_D.setEnabled(false);
        txtDocumento_EC_D.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtDocumento_EC_DCaretUpdate(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        jLabel9.setText("AM:");

        jLabel8.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        jLabel8.setText("Paciente:");

        txtAM_EC_D.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtAM_EC_D.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAM_EC_D.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        jLabel7.setText("HC:");

        txtHC_EC_D.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtHC_EC_D.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHC_EC_D.setEnabled(false);

        txtNombres_EC_D.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtNombres_EC_D.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNombres_EC_D.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDocumento_EC_D)
                    .addComponent(txtDNI_EC_D, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNombres_EC_D, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAM_EC_D, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtHC_EC_D, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDocumento_EC_D, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(txtAM_EC_D, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHC_EC_D, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addComponent(txtDNI_EC_D, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombres_EC_D, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout DETALLELayout = new javax.swing.GroupLayout(DETALLE.getContentPane());
        DETALLE.getContentPane().setLayout(DETALLELayout);
        DETALLELayout.setHorizontalGroup(
            DETALLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(DETALLELayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DETALLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(DETALLELayout.createSequentialGroup()
                        .addGroup(DETALLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(DETALLELayout.createSequentialGroup()
                                .addComponent(lblEdad_EC_D, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblGenero_EC_D))
                            .addGroup(DETALLELayout.createSequentialGroup()
                                .addComponent(lblFechaNaci_EC_D)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblIDArea_EC_D)))
                        .addGap(18, 18, 18)
                        .addComponent(lblUsuD_EC_D, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblNomAD_EC_D, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DETALLELayout.setVerticalGroup(
            DETALLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DETALLELayout.createSequentialGroup()
                .addGroup(DETALLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DETALLELayout.createSequentialGroup()
                        .addGroup(DETALLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEdad_EC_D)
                            .addComponent(lblGenero_EC_D))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DETALLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFechaNaci_EC_D)
                            .addComponent(lblIDArea_EC_D)))
                    .addGroup(DETALLELayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(DETALLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(lblNomAD_EC_D)
                            .addComponent(lblUsuD_EC_D))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        detalle.setText("Ver detalle");
        detalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detalleActionPerformed(evt);
            }
        });
        jPopupMenu1.add(detalle);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 600));
        setResizable(false);

        jpanel.setBackground(new java.awt.Color(102, 102, 102));

        titulo5.setBackground(new java.awt.Color(0, 102, 102));
        titulo5.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        titulo5.setForeground(new java.awt.Color(255, 255, 255));
        titulo5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo5.setText("ExÃ¡menes EC");
        titulo5.setToolTipText("");
        titulo5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblUsu.setFont(new java.awt.Font("Segoe UI Light", 0, 25)); // NOI18N
        lblUsu.setForeground(new java.awt.Color(255, 255, 255));
        lblUsu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos/User-32.png"))); // NOI18N
        lblUsu.setText("Usuario");

        fecha_inicio_EC.setBackground(new java.awt.Color(255, 255, 255));
        fecha_inicio_EC.setDateFormatString("dd-MM-yyyy");
        fecha_inicio_EC.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fecha_inicio_ECPropertyChange(evt);
            }
        });
        fecha_inicio_EC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fecha_inicio_ECKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Inicio :");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Termino :");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("AM, DNI , HC, APELLIDOS Y NOMBRES");

        cbFecha_EC.setBackground(new java.awt.Color(255, 255, 255));
        cbFecha_EC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbFecha_EC.setForeground(new java.awt.Color(255, 255, 255));
        cbFecha_EC.setText("Buscar por Rango de Fechas");
        cbFecha_EC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFecha_ECActionPerformed(evt);
            }
        });
        cbFecha_EC.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbFecha_ECPropertyChange(evt);
            }
        });

        fecha_fin_EC.setBackground(new java.awt.Color(255, 255, 255));
        fecha_fin_EC.setDateFormatString("dd-MM-yyyy");
        fecha_fin_EC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fecha_fin_ECKeyTyped(evt);
            }
        });

        EC_BUSCAR_FECHAS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconos/BÃºsqueda-32.png"))); // NOI18N
        EC_BUSCAR_FECHAS.setContentAreaFilled(false);
        EC_BUSCAR_FECHAS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EC_BUSCAR_FECHASActionPerformed(evt);
            }
        });

        jPanel23.setBackground(new java.awt.Color(255, 255, 255));

        txtBuscarPaciente_EC.setBorder(null);
        txtBuscarPaciente_EC.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtBuscarPaciente_ECCaretUpdate(evt);
            }
        });
        txtBuscarPaciente_EC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarPaciente_ECKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarPaciente_ECKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarPaciente_ECKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addComponent(txtBuscarPaciente_EC)
                .addContainerGap())
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtBuscarPaciente_EC, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jpanelLayout = new javax.swing.GroupLayout(jpanel);
        jpanel.setLayout(jpanelLayout);
        jpanelLayout.setHorizontalGroup(
            jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanelLayout.createSequentialGroup()
                        .addGroup(jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cbFecha_EC, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpanelLayout.createSequentialGroup()
                                .addGroup(jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fecha_fin_EC, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                    .addComponent(fecha_inicio_EC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EC_BUSCAR_FECHAS, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(titulo5)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(lblUsu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpanelLayout.setVerticalGroup(
            jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelLayout.createSequentialGroup()
                .addComponent(titulo5, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88)
                .addComponent(cbFecha_EC, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fecha_inicio_EC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(fecha_fin_EC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(EC_BUSCAR_FECHAS)))
                .addGap(51, 51, 51)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblUsu, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        tb_Examen_EC = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        tb_Examen_EC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_Examen_EC.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tb_Examen_EC.setComponentPopupMenu(jPopupMenu1);
        tb_Examen_EC.setRowHeight(35);
        tb_Examen_EC.setSelectionBackground(new java.awt.Color(102, 102, 102));
        tb_Examen_EC.getTableHeader().setReorderingAllowed(false);
        tb_Examen_EC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tb_Examen_ECKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tb_Examen_EC);

        jPanel4.setBackground(new java.awt.Color(43, 43, 43));

        jLabel15.setFont(new java.awt.Font("Segoe UI Light", 0, 23)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("ExÃ¡menes del DÃ­a");

        lblfecha_F2.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        lblfecha_F2.setForeground(new java.awt.Color(255, 255, 255));
        lblfecha_F2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblfecha_F2.setText(" ");

        jLabel13.setForeground(new java.awt.Color(43, 43, 43));
        jLabel13.setText("jLabel3");

        jLabel14.setForeground(new java.awt.Color(43, 43, 43));
        jLabel14.setText("jLabel3");

        lblfecha_I_EC.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblfecha_I_EC.setForeground(new java.awt.Color(255, 255, 255));
        lblfecha_I_EC.setText("  ");

        lblG_EC.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblG_EC.setForeground(new java.awt.Color(255, 255, 255));
        lblG_EC.setText("-");

        lblfecha_F_EC.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblfecha_F_EC.setForeground(new java.awt.Color(255, 255, 255));
        lblfecha_F_EC.setText(" ");

        lblFecha_EC.setForeground(new java.awt.Color(255, 255, 255));
        lblFecha_EC.setText("jLabel3");

        lblNumeArea_EC.setForeground(new java.awt.Color(255, 255, 255));
        lblNumeArea_EC.setText("jLabel3");

        lblHora_EC.setForeground(new java.awt.Color(255, 255, 255));
        lblHora_EC.setText("jLabel3");

        lblNomArea_EC.setBackground(new java.awt.Color(43, 43, 43));
        lblNomArea_EC.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        lblNomArea_EC.setForeground(new java.awt.Color(43, 43, 43));
        lblNomArea_EC.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNomArea_EC.setText("jLabel3");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                        .addGap(108, 108, 108)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblFecha_EC, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblHora_EC, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(lblNumeArea_EC)))
                        .addGap(170, 170, 170))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lblfecha_I_EC, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblG_EC)
                        .addGap(10, 10, 10)
                        .addComponent(lblfecha_F_EC, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(185, 185, 185)
                        .addComponent(lblfecha_F2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(183, 183, 183)
                        .addComponent(jLabel14))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblNomArea_EC, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel15))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblFecha_EC)
                                    .addComponent(lblHora_EC))
                                .addGap(13, 13, 13)
                                .addComponent(lblNumeArea_EC))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNomArea_EC, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblfecha_F2)
                    .addComponent(lblfecha_I_EC)
                    .addComponent(lblG_EC)
                    .addComponent(lblfecha_F_EC))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE))
            .addComponent(jpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fecha_inicio_ECPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fecha_inicio_ECPropertyChange
        //validar_fecha();
    }//GEN-LAST:event_fecha_inicio_ECPropertyChange

    private void fecha_inicio_ECKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fecha_inicio_ECKeyTyped
        //        char tecla= evt.getKeyChar();
        //        if(tecla==KeyEvent.VK_ENTER){
            //            btnBuscarP.doClick();
            //        }
    }//GEN-LAST:event_fecha_inicio_ECKeyTyped

    private void txtBuscarPaciente_ECCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtBuscarPaciente_ECCaretUpdate
    if(cbFecha_EC.isSelected()== true && (fecha_inicio_EC.getDate()==null || fecha_fin_EC.getDate()==null)){
        JOptionPane.showMessageDialog(rootPane, "Debe seleccionar un rango de fechas");
    }
    
    if(cbFecha_EC.isSelected()==true){
        buscar_examen_EC();
    }else if(cbFecha_EC.isSelected()==false){
        BuscarPacientesDIA_EC();
    }        
    }//GEN-LAST:event_txtBuscarPaciente_ECCaretUpdate

    private void txtBuscarPaciente_ECKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarPaciente_ECKeyTyped
        char tecla= evt.getKeyChar();
        if(tecla==KeyEvent.VK_ENTER){
            tb_Examen_EC.getSelectionModel().setSelectionInterval(0, 0);
            tb_Examen_EC.requestFocus();
        }
        
        ///LIMITE DE DIGITOS
       if (txtBuscarPaciente_EC.getText().length()>40)
       {
                evt.consume();
       }
    }//GEN-LAST:event_txtBuscarPaciente_ECKeyTyped

    private void cbFecha_ECActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFecha_ECActionPerformed
        seleccion_EC();
    }//GEN-LAST:event_cbFecha_ECActionPerformed

    private void cbFecha_ECPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbFecha_ECPropertyChange

    }//GEN-LAST:event_cbFecha_ECPropertyChange

    private void fecha_fin_ECKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fecha_fin_ECKeyTyped

    }//GEN-LAST:event_fecha_fin_ECKeyTyped

    private void EC_BUSCAR_FECHASActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EC_BUSCAR_FECHASActionPerformed
      try{
          
         String fecha = lblFecha_EC.getText();
         int diaAC = Integer.parseInt(fecha.substring(0, 2));
         int mesAC = Integer.parseInt(fecha.substring(3, 5));
         int anioAC = Integer.parseInt(fecha.substring(6, 10));
        
         String diaIN = new SimpleDateFormat("dd").format(fecha_inicio_EC.getDate());
         String mesIN = new SimpleDateFormat("MM").format(fecha_inicio_EC.getDate());
         String anioIN = new SimpleDateFormat("yyy").format(fecha_inicio_EC.getDate());
         
//         
//         int diaIN = fecha_inicio_EC.getCalendar().get(Calendar.DAY_OF_MONTH);
//         int mesIN = fecha_inicio_EC.getCalendar().get(Calendar.MONTH) + 1;
//         int anioIN = fecha_inicio_EC.getCalendar().get(Calendar.YEAR);
         
         String diaFN = new SimpleDateFormat("dd").format(fecha_fin_EC.getDate());
         String mesFN = new SimpleDateFormat("MM").format(fecha_fin_EC.getDate());
         String anioFN = new SimpleDateFormat("yyy").format(fecha_fin_EC.getDate());
         
//         
//         int diaFN = fecha_fin_EC.getCalendar().get(Calendar.DAY_OF_MONTH);
//         int mesFN = fecha_fin_EC.getCalendar().get(Calendar.MONTH) + 1;
//         int anioFN = fecha_fin_EC.getCalendar().get(Calendar.YEAR);
//         

//            if(fecha_inicio.getDate()==null || fecha_fin.getDate()==null){
//              JOptionPane.showMessageDialog(rootPane, "Seleccione un rango de fechas");
//            }else{
//                 if(diaIN > diaAC || mesIN > mesAC || anioIN > anioAC){
//                        JOptionPane.showMessageDialog(rootPane, "Seleccione una fecha de inicio \n menor a la actual: " + diaAC + "-" +
//                        mesAC + "-" + anioAC);
//                        fecha_inicio.setDate(null);
//                 }else{
//                       if(diaFN > diaAC || mesFN > mesAC || anioFN > anioAC){
//                                JOptionPane.showMessageDialog(rootPane, "Seleccione una fecha de termino \n menor a la actual: " + diaAC + "-" +
//                                mesAC + "-" + anioAC);
//                                fecha_fin.setDate(null);
//                       }else{
                                buscar_examen_EC();
                                lblfecha_I_EC.setText(diaIN + "/" + mesIN + "/" + anioIN);
                                lblfecha_F_EC.setText(diaFN + "/" + mesFN + "/" + anioFN);
                                lblG_EC.setVisible(true);
                                lblfecha_I_EC.setVisible(true);
                                lblfecha_F_EC.setVisible(true);
                                txtBuscarPaciente_EC.requestFocus();
                                
//                       }  
//                }
//             
//            }
            
//            if(tb_Examenes.getRowCount()==0){
//                lblRegistro.setVisible(true);
////                JOptionPane.showMessageDialog(rootPane, "No se encontraron registros");
//            }else{
//                lblRegistro.setVisible(false);
//            }
         
          }catch(Exception e) {
              JOptionPane.showMessageDialog(rootPane, "Seleccione un rango de fechas");
          }
    }//GEN-LAST:event_EC_BUSCAR_FECHASActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {   
            EC_BUSCAR_EXAMEN_CAJA R = new EC_BUSCAR_EXAMEN_CAJA();
            R.setVisible(false);
            DETALLE.dispose();
            cargar_tabla_cabecera_OK_EC();
         
        } catch (Exception e) {
        }        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtDocumento_EC_DCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtDocumento_EC_DCaretUpdate
        VER_DETALLE();
    }//GEN-LAST:event_txtDocumento_EC_DCaretUpdate

    private void detalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detalleActionPerformed
        DETALLE.setVisible(true);
        ver_detalle_EC();
    }//GEN-LAST:event_detalleActionPerformed

    private void tb_Examen_ECKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_Examen_ECKeyPressed
       char tecla= evt.getKeyChar();
                if(tecla==KeyEvent.VK_ENTER){
                    
                    int filaselec=tb_Examen_EC.getSelectedRow();
                    if( filaselec>=0){
                        cargar_tabla_cabecera_ENTER_EC();

                        if(txtCOD_CABECERA.getText().length()!=0){
                            btnPersonalRegistra_EC.setEnabled(false);
                            btnPersonalRealiza_EC.setEnabled(false);
                            btnPersonalSolicita.setEnabled(false);
                            tb_examen_det_EC.setEnabled(true);
                            tb_examen_det_EC.setBackground(Color.white);
                        }else{
                            btnPersonalRegistra_EC.requestFocus();
                        }
                    
                    } 
                    
        }
    }//GEN-LAST:event_tb_Examen_ECKeyPressed

    private void txtBuscarPaciente_ECKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarPaciente_ECKeyPressed
       char tecla= evt.getKeyChar();
      if(evt.getExtendedKeyCode()==KeyEvent.VK_DOWN){
            tb_Examen_EC.getSelectionModel().setSelectionInterval(0, 0);
            tb_Examen_EC.requestFocus();
        }
    }//GEN-LAST:event_txtBuscarPaciente_ECKeyPressed

    private void txtBuscarPaciente_ECKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarPaciente_ECKeyReleased
       txtBuscarPaciente_EC.setText(txtBuscarPaciente_EC.getText().toUpperCase());
    }//GEN-LAST:event_txtBuscarPaciente_ECKeyReleased

    public void inicializar_tabla_Examenes_EC(){       
        try {
            
            String titulosb[]={"ID_HC","NÂ° HC","Nombre del Paciente","DNI","Fecha Nac.","Edad","Sexo",
            "Acto MÃ©dico","Cant. Examenes","Fecha Examen", "Codigo ExÃ¡men"};
            msb=new DefaultTableModel(null,titulosb);
            JTable psb=new JTable(msb);
            String filasb[]=new String[11];
            tb_Examen_EC.setModel(msb);
            TableRowSorter<TableModel> elQueOrdenasb=new TableRowSorter<TableModel>(msb);
            tb_Examen_EC.setRowSorter(elQueOrdenasb);
            this.tb_Examen_EC.setModel(msb);
            
            formatoExamen_EC();
            
        } catch (Exception e) {
            System.out.println("error inicializar tabla_RV: " + e);
        }
            
    }
    
    public void mostrarPacientes_EC(){
        try {
                     
            String consulta="";
            
            tb_Examen_EC.setModel(new DefaultTableModel());
            String titulos[]={"ID_HC","NÂ° HC","Nombre del Paciente","DNI","Fecha Nac.","Edad","Sexo",
            "Acto MÃ©dico","Cant. Examenes","Fecha Examen","Codigo Documento"};
            m1=new DefaultTableModel(null,titulos);
            JTable p=new JTable(m1);
            String fila[]=new String[11];
            Usuario obj=new Usuario();
            consulta="exec RX_EC_LISTAR_CAJA_DIA_EC ";
            PreparedStatement cmd = obj.getCn().prepareStatement(consulta);
            
            ResultSet r= cmd.executeQuery();
            while(r.next()){
            for (int i=0; i<11; i++){
            fila[i]=r.getString(i+1);
            }
                m1.addRow(fila);
            }
            tb_Examen_EC.setModel(m1);
            TableRowSorter<TableModel> elQueOrdena=new TableRowSorter<TableModel>(m1);
            tb_Examen_EC.setRowSorter(elQueOrdena);
            tb_Examen_EC.setModel(m1);
                       
            formatoExamen_EC();
            
        } catch (Exception e) {
            System.out.println("Error mostrar paciente: " + e.getMessage());
        }       
    }
    
    public void formatoExamen_EC(){        
              
            tb_Examen_EC.getColumnModel().getColumn(0).setPreferredWidth(80); 
            tb_Examen_EC.getColumnModel().getColumn(1).setPreferredWidth(80);
            tb_Examen_EC.getColumnModel().getColumn(2).setPreferredWidth(300);
            tb_Examen_EC.getColumnModel().getColumn(3).setPreferredWidth(100);                
            tb_Examen_EC.getColumnModel().getColumn(4).setPreferredWidth(60); 
            tb_Examen_EC.getColumnModel().getColumn(5).setPreferredWidth(60);
            tb_Examen_EC.getColumnModel().getColumn(6).setPreferredWidth(60);
            tb_Examen_EC.getColumnModel().getColumn(7).setPreferredWidth(80); 
            tb_Examen_EC.getColumnModel().getColumn(8).setPreferredWidth(110);
            tb_Examen_EC.getColumnModel().getColumn(9).setPreferredWidth(110);
            tb_Examen_EC.getColumnModel().getColumn(10).setPreferredWidth(180);
            //Ocultar
            tb_Examen_EC.getColumnModel().getColumn(0).setMinWidth(0);
            tb_Examen_EC.getColumnModel().getColumn(0).setMaxWidth(0);    
            tb_Examen_EC.getColumnModel().getColumn(4).setMinWidth(0);
            tb_Examen_EC.getColumnModel().getColumn(4).setMaxWidth(0);
    }
    
    public void mostrarArea_EC(){
        String consulta="";
        try {
            consulta="EXEC RX_EC_SERVICIO_EC ";
            PreparedStatement cmd = EC.getCn().prepareStatement(consulta);        
            ResultSet r= cmd.executeQuery();
            int c=1;
            while(r.next()){
                lblNumeArea_EC.setText(r.getString(1));
                lblNomArea_EC.setText(r.getString(2));
            }
            
        } catch (Exception e) {
            System.out.println("Error carga area : " + e.getMessage());
        }
    }
    
    public void ver_detalle_EC(){
        int filaselec=tb_Examen_EC.getSelectedRow();
        txtDocumento_EC_D.setText(tb_Examen_EC.getValueAt(filaselec, 10).toString());
        txtAM_EC_D.setText(tb_Examen_EC.getValueAt(filaselec, 7).toString());
        txtHC_EC_D.setText(tb_Examen_EC.getValueAt(filaselec, 1).toString());
        txtDNI_EC_D.setText(tb_Examen_EC.getValueAt(filaselec, 3).toString());
        txtNombres_EC_D.setText(tb_Examen_EC.getValueAt(filaselec, 2).toString());
        lblNumero.setText(tb_Examen_EC.getValueAt(filaselec, 8).toString());
        lblFechaNaci_EC_D.setText(tb_Examen_EC.getValueAt(filaselec, 4).toString());
        lblEdad_EC_D.setText(tb_Examen_EC.getValueAt(filaselec, 5).toString());
        lblGenero_EC_D.setText(tb_Examen_EC.getValueAt(filaselec, 6).toString());
        lblIDArea_EC_D.setText(lblNumeArea_EC.getText());
        lblNomAD_EC_D.setText(lblNomArea_EC.getText());
        lblUsuD_EC_D.setText(lblUsu.getText());
    }
    
    
    public void VER_DETALLE(){
        try {           
            //detalle
            String consulta="";
            tb_Detalle_EC_D.setModel(new DefaultTableModel());
            String titulos[]={"Cod. Documento Det.","Cod. Nomenclatura","DescripciÃ³n Nomenclatura"};
            m2=new DefaultTableModel(null,titulos);
            JTable p=new JTable(m2);
            String fila[]=new String[3];
            Usuario obj=new Usuario();
            consulta="exec RX_EC_VER_DETALLE_EXAMEN_EC ?";
            PreparedStatement cmd = obj.getCn().prepareStatement(consulta);
            cmd.setString(1, txtDocumento_EC_D.getText());
            ResultSet r= cmd.executeQuery();
            while(r.next()){
            for (int i=0; i<3; i++){
            fila[i]=r.getString(i+1);
            }
                m2.addRow(fila);
            }
            tb_Detalle_EC_D.setModel(m2);
            TableRowSorter<TableModel> elQueOrdena=new TableRowSorter<TableModel>(m2);
            tb_Detalle_EC_D.setRowSorter(elQueOrdena);
            tb_Detalle_EC_D.setModel(m2);
                       
            formatoVerDetalle();
            
        } catch (Exception e) {
            System.out.println("Error ver detalle tabla: " + e.getMessage());
        }
        
    }
    
    public void formatoVerDetalle(){                      
            tb_Detalle_EC_D.getColumnModel().getColumn(0).setPreferredWidth(130); 
            tb_Detalle_EC_D.getColumnModel().getColumn(1).setPreferredWidth(130);
            tb_Detalle_EC_D.getColumnModel().getColumn(2).setPreferredWidth(600);                      
    }
     
    public void cargar_tabla_cabecera_ENTER_EC(){
    try{
                        if( tb_Examen_EC.getRowCount()>0){
                        int filaselec=tb_Examen_EC.getSelectedRow();
                        
                           dispose();
                            EC_EXAMEN_CAB ec=new EC_EXAMEN_CAB();
                            ec.setVisible(true);
                            
                            EC_EXAMEN_CAB.txtCodigoDoc_EC.setText(tb_Examen_EC.getValueAt(filaselec, 10).toString());
                            EC_EXAMEN_CAB.txtAM.setText(tb_Examen_EC.getValueAt(filaselec, 7).toString());
                            EC_EXAMEN_CAB.txtHC.setText(tb_Examen_EC.getValueAt(filaselec, 1).toString());
                            EC_EXAMEN_CAB.txtDNI.setText(tb_Examen_EC.getValueAt(filaselec, 3).toString());
                            EC_EXAMEN_CAB.txtNombreP.setText(tb_Examen_EC.getValueAt(filaselec, 2).toString());
//                            RX_EC_EXAMEN_CAB.lblCantidad.setText(tb_Examenes.getValueAt(filaselec, 8).toString());
                            EC_EXAMEN_CAB.txtEdad.setText(tb_Examen_EC.getValueAt(filaselec, 5).toString());
                            EC_EXAMEN_CAB.txtFechaNac.setText(tb_Examen_EC.getValueAt(filaselec, 4).toString());
                            EC_EXAMEN_CAB.txtGenero.setText(tb_Examen_EC.getValueAt(filaselec, 6).toString());
//                            RX_EC_EXAMEN_CAB.lblCantidad.setText(tb_Examenes.getValueAt(filaselec, 8).toString());
//                            lblIDArea.setText(lblNumeArea.getText());
//                            lblNomAD.setText(lblNomArea.getText());
                                                    
                            EC_EXAMEN_CAB.lblIDArea_EC.setText(lblNumeArea_EC.getText());
                            EC_EXAMEN_CAB.lblNomA_EC.setText(lblNomArea_EC.getText());
                            

                            String u=lblUsu.getText();
                            EC_EXAMEN_CAB.lblUsu_EC.setText(u);
                        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "cargar"+e.getMessage());
        }           
    }
    
    public void cargar_tabla_cabecera_OK_EC(){
    try{
                        if( tb_Examen_EC.getRowCount()>0){
                        int filaselec=tb_Examen_EC.getSelectedRow();
                            
                            dispose();
                            EC_EXAMEN_CAB E=new EC_EXAMEN_CAB();
                            E.setVisible(true);
                            EC_EXAMEN_CAB.txtHC.setText(txtHC_EC_D.getText());
                            EC_EXAMEN_CAB.txtNombreP.setText(txtNombres_EC_D.getText());
                            EC_EXAMEN_CAB.txtDNI.setText(txtDNI_EC_D.getText());
                            EC_EXAMEN_CAB.txtFechaNac.setText(lblFechaNaci_EC_D.getText());
                            EC_EXAMEN_CAB.txtEdad.setText(lblEdad_EC_D.getText());
                            EC_EXAMEN_CAB.txtGenero.setText(lblGenero_EC_D.getText());
                            EC_EXAMEN_CAB.txtAM.setText(txtAM_EC_D.getText());
                            EC_EXAMEN_CAB.txtCodigoDoc_EC.setText(txtDocumento_EC_D.getText());
//                            RX_EC_EXAMEN_CAB.lblCantidad.setText(lblNumero.getText());
                            
                            EC_EXAMEN_CAB.lblIDArea_EC.setText(lblIDArea_EC_D.getText());
                            EC_EXAMEN_CAB.lblNomA_EC.setText(lblNomAD_EC_D.getText());
                            

                                  String u=lblUsu.getText();
                                  EC_EXAMEN_CAB.lblUsu_EC.setText(u);
                        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "cargar"+e.getMessage());
        }           
    }
    
    public void buscar_examen_EC(){
    
           int dia = fecha_inicio_EC.getCalendar().get(Calendar.DAY_OF_MONTH);
           int mes = fecha_inicio_EC.getCalendar().get(Calendar.MONTH) + 1;
           int anio = fecha_inicio_EC.getCalendar().get(Calendar.YEAR);
                       
           int fechaI;
                       
                       if(mes<10 && dia<10){
                           fechaI = Integer.parseInt(anio + "0" + mes + "0" + dia);
                       }else{                           
                           if(mes<10 && dia>=10){
                           fechaI = Integer.parseInt(anio + "0"+ mes + dia);
                           }else{
                               if(mes >=10 && dia<10){
                                 fechaI = Integer.parseInt( anio + mes + "0"+ dia);
                               }else{
                                   fechaI = anio +  mes + dia ;
                               }
                           }
                       }

                       
           int dia1 = fecha_fin_EC.getCalendar().get(Calendar.DAY_OF_MONTH);
           int mes1 = fecha_fin_EC.getCalendar().get(Calendar.MONTH) + 1;
           int anio1 = fecha_fin_EC.getCalendar().get(Calendar.YEAR);
                       
           int fechaF;
                       
                       if(mes1<10 && dia1<10){
                           fechaF = Integer.parseInt(anio1 + "0" + mes1 + "0" + dia1);
                       }else{                           
                           if(mes1<10 && dia1>=10){
                           fechaF = Integer.parseInt(anio1 + "0"+ mes1 +  dia1);
                           }else{
                               if(mes1 >=10 && dia1<10){
                                 fechaF = Integer.parseInt(anio1  + mes1 + "0"+ dia1);
                               }else{
                                   fechaF = anio1 + mes1 + dia1 ;
                               }
                           }
                       }

                       
        
        String buscar="",servicioArea="";
        buscar = txtBuscarPaciente_EC.getText();
        servicioArea = lblNumeArea_EC.getText();
        
        
        
    String consulta="";
        try {
            tb_Examen_EC.setModel(new DefaultTableModel());
            String titulos[]={"ID_HC","NÂ° HC","Nombre del Paciente","DNI","Fecha Nac.","Edad","Sexo",
            "Acto MÃ©dico","Cant. Examenes","Fecha Examen","Codigo Documento"};
            m3=new DefaultTableModel(null,titulos);
            JTable p=new JTable(m3);
            String fila[]=new String[11];

            EC_EXAMEN_CABECERA obj=new EC_EXAMEN_CABECERA();
            consulta="exec RX_EC_BUSCAR_CAJA_EC_FECHA ?,?,?";
            PreparedStatement cmd = obj.getCn().prepareStatement(consulta);
            cmd.setInt(1,fechaI);
            cmd.setInt(2, fechaF);
            cmd.setString(3, buscar);
            
            ResultSet r= cmd.executeQuery();
            int c=1;
            while(r.next()){               
                fila[0]=r.getString(1);
                fila[1]=r.getString(2);
                fila[2]=r.getString(3);
                fila[3]=r.getString(4);
                fila[4]=r.getString(5);
                fila[5]=r.getString(6);
                fila[6]=r.getString(7);
                fila[7]=r.getString(8);
                fila[8]=r.getString(9);
                fila[9]=r.getString(10);
                fila[10]=r.getString(11);
                
                m3.addRow(fila);
                c++;
            }
            tb_Examen_EC.setModel(m3);
            TableRowSorter<TableModel> elQueOrdena=new TableRowSorter<TableModel>(m3);
            tb_Examen_EC.setRowSorter(elQueOrdena);
            this.tb_Examen_EC.setModel(m3);
            
            formatoExamen_EC();
            
            
            
        } catch (Exception e) {
            System.out.println("Error buscar examen: " + e.getMessage());
        }
    }
    
    public void BuscarPacientesDIA_EC(){
        try {
                     
            String consulta="";
            
            tb_Examen_EC.setModel(new DefaultTableModel());
            String titulos[]={"ID_HC","NÂ° HC","Nombre del Paciente","DNI","Fecha Nac.","Edad","Sexo",
            "Acto MÃ©dico","Cant. Examenes","Fecha Examen","Codigo Documento"};
            m4=new DefaultTableModel(null,titulos);
            JTable p=new JTable(m4);
            String fila[]=new String[11];
            Usuario obj=new Usuario();
            consulta="exec RX_EC_BUSCAR_CAJA_EC_DIA ?";
            PreparedStatement cmd = obj.getCn().prepareStatement(consulta);            
            cmd.setString(1, txtBuscarPaciente_EC.getText());
            
            
            ResultSet r= cmd.executeQuery();
            while(r.next()){
            for (int i=0; i<11; i++){
            fila[i]=r.getString(i+1);
            }
                m4.addRow(fila);
            }
            tb_Examen_EC.setModel(m4);
            TableRowSorter<TableModel> elQueOrdena=new TableRowSorter<TableModel>(m4);
            tb_Examen_EC.setRowSorter(elQueOrdena);
            tb_Examen_EC.setModel(m4);
                       
            formatoExamen_EC();
            
            
            
        } catch (Exception e) {
            System.out.println("Error mostrar paciente: " + e.getMessage());
        }
        
    }
    
    public void seleccion_EC(){
        if(cbFecha_EC.isSelected()==true){
            fecha_inicio_EC.setEnabled(true);
            fecha_fin_EC.setEnabled(true);
            txtBuscarPaciente_EC.setText("");
//            lblfecha_I_EC.setVisible(true);
//            lblfecha_F_EC.setVisible(true);
//            lblG_EC.setVisible(true);
            EC_BUSCAR_FECHAS.setEnabled(true);
        }else{
            fecha_inicio_EC.setEnabled(false);
            fecha_fin_EC.setEnabled(false);
            fecha_inicio_EC.setDate(null);
            fecha_fin_EC.setDate(null);
            txtBuscarPaciente_EC.setText("");
            lblfecha_I_EC.setVisible(false);
            lblfecha_F_EC.setVisible(false);
            lblG_EC.setVisible(false);
            EC_BUSCAR_FECHAS.setEnabled(false);
            txtBuscarPaciente_EC.requestFocus();
        }
    }       
    
    public static String fechaActual(){
        Date now = new Date(System.currentTimeMillis());
        SimpleDateFormat date = new SimpleDateFormat("dd/MM/yyyy");
        return date.format(now);
    }
    
    public void calcula() {
        Calendar calendario = new GregorianCalendar();
        java.util.Date fechaHoraActual = new java.util.Date();


        calendario.setTime(fechaHoraActual);
        ampm = calendario.get(Calendar.AM_PM) == Calendar.AM ? "AM" : "PM";

        if (ampm.equals("PM")) {
            int h = calendario.get(Calendar.HOUR_OF_DAY) - 12;
            hora = h > 9 ? "" + h : "0" + h;
        } else {
            hora = calendario.get(Calendar.HOUR_OF_DAY) > 9 ? "" + calendario.get(Calendar.HOUR_OF_DAY) : "0" + calendario.get(Calendar.HOUR_OF_DAY);
        }
        minutos = calendario.get(Calendar.MINUTE) > 9 ? "" + calendario.get(Calendar.MINUTE) : "0" + calendario.get(Calendar.MINUTE);
        segundos = calendario.get(Calendar.SECOND) > 9 ? "" + calendario.get(Calendar.SECOND) : "0" + calendario.get(Calendar.SECOND);
    }
    
    public void cerrar(){
        int eleccion = JOptionPane.showConfirmDialog(rootPane,"Â¿Desea realmente salir del formulario?","Mensaje de ConfirmaciÃ³n",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE);
        if (eleccion == JOptionPane.YES_OPTION)
        {
            dispose();   
//            PrincipalMDI MDI= new PrincipalMDI();
//            MDI.setVisible(true);  
        }else{
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EC_BUSCAR_EXAMEN_CAJA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EC_BUSCAR_EXAMEN_CAJA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EC_BUSCAR_EXAMEN_CAJA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EC_BUSCAR_EXAMEN_CAJA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EC_BUSCAR_EXAMEN_CAJA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog DETALLE;
    private javax.swing.JButton EC_BUSCAR_FECHAS;
    private javax.swing.JCheckBox cbFecha_EC;
    private javax.swing.JMenuItem detalle;
    private com.toedter.calendar.JDateChooser fecha_fin_EC;
    private com.toedter.calendar.JDateChooser fecha_inicio_EC;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel jpanel;
    private javax.swing.JLabel lblEdad_EC_D;
    private javax.swing.JLabel lblFechaNaci_EC_D;
    private javax.swing.JLabel lblFecha_EC;
    private javax.swing.JLabel lblG_EC;
    private javax.swing.JLabel lblGenero_EC_D;
    private javax.swing.JLabel lblHora_EC;
    private javax.swing.JLabel lblIDArea_EC_D;
    private javax.swing.JLabel lblNomAD_EC_D;
    private javax.swing.JLabel lblNomArea_EC;
    private javax.swing.JLabel lblNumeArea_EC;
    private javax.swing.JLabel lblNumero;
    public static javax.swing.JLabel lblUsu;
    private javax.swing.JLabel lblUsuD_EC_D;
    private javax.swing.JLabel lblfecha_F2;
    private javax.swing.JLabel lblfecha_F_EC;
    private javax.swing.JLabel lblfecha_I_EC;
    private javax.swing.JTable tb_Detalle_EC_D;
    private javax.swing.JTable tb_Examen_EC;
    private javax.swing.JLabel titulo5;
    private javax.swing.JTextField txtAM_EC_D;
    private javax.swing.JTextField txtBuscarPaciente_EC;
    private javax.swing.JTextField txtDNI_EC_D;
    private javax.swing.JTextField txtDocumento_EC_D;
    private javax.swing.JTextField txtHC_EC_D;
    private javax.swing.JTextField txtNombres_EC_D;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    Thread ct = Thread.currentThread();
        while (ct == h1) {
            calcula();
            if(cbFecha_EC.isSelected()==false){
                mostrarPacientes_EC();
            }
            
            lblHora_EC.setText(hora + ":" + minutos + ":" + segundos + " " + ampm);
            try {
                Thread.sleep(10000);
            } catch (InterruptedException e) {
            }
        }
    }
}
